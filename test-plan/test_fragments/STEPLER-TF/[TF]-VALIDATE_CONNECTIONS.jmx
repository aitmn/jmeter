<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Подключение клиенту с неподходящим профилем" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="FREE_TAX_COUNT" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_cap_service" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ИП" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ИП на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ИП на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ИП на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ИП на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ИП на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ИП на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ИП на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ООО" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (ЕНВД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на ЕНВД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕНВД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый налог на временный доход (ЕНВД)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (УСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на УСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы 6%&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (Патент)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на Патенте&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на Патенте без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Патент&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT (УСН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service ООО на УСН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_cap_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга FREE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга FREE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TAX_COUNT" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_tax_service" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ИП" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ИП на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ИП на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ИП на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на УСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path"></stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;available_balance&quot;,3000);
vars.putObject(&quot;counter&quot;,0);</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">start</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &lt;= 9900)" enabled="true">
                    <stringProp name="WhileController.condition">${__javaScript((${available_balance} &lt;= 9900)&amp;&amp;(${counter} &lt; 5))}</stringProp>
                  </WhileController>
                  <hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">0</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counter</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">false</boolProp>
                    </CounterConfig>
                    <hashTree/>
                    <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента → ${RS_DB_URL}" enabled="true">
                      <stringProp name="dataSource">RS_${__P(layer)}</stringProp>
                      <stringProp name="query">
SELECT UD.external_id  AS EXTERNAL_ID_HOLDER,
       CR.permanent_id AS Retail,
       CB.permanent_id AS Business
FROM   user_data UD
       INNER JOIN customer CR
               ON CR.id = UD.id_customer
       INNER JOIN customer_relation CN
               ON CN.id_parent = CR.id
       INNER JOIN customer CB
               ON CB.id = CN.id_dependant 
WHERE 
  UD.state = &apos;Active&apos; 
  AND UD.user_source = &apos;Default&apos; 
  AND UD.external_id IS NOT NULL 
  AND CR.state = &apos;Active&apos; 
  AND CB.state = &apos;Active&apos; 
  AND CB.customer_type = &apos;Business&apos; 
              AND CB.TAX_SYSTEM =&apos;USN_REV_EXP&apos;
  AND CB.extra_type = &apos;INDIVIDUAL&apos; -- BUSINESS INDIVIDUAL
  AND UD.id IN (
    SELECT 
      UD.id 
    FROM 
      user_data UD 
    WHERE 
      UD.id_customer IN (
        SELECT 
          CN.id_parent 
        FROM 
          customer_relation CN 
        WHERE 
          CN.state = &apos;Active&apos; 
          AND CN.relation_type = &apos;Head&apos; 
          AND EXISTS(
            SELECT 
              1 
            FROM 
              customer CB 
            WHERE 
              CB.id = CN.id_dependant 
              AND CB.state = &apos;Active&apos; 
              AND CB.customer_type = &apos;Business&apos; 
              AND CB.extra_type = &apos;INDIVIDUAL&apos;
              AND CB.TAX_SYSTEM =&apos;USN_REV_EXP&apos;
          ) -- BUSINESS INDIVIDUAL
          AND EXISTS (
            SELECT 
              1 
            FROM 
              user_data UD 
            WHERE 
              UD.id_customer = CN.id_parent 
              AND UD.state = &apos;Active&apos;
          )
      )
  ) 
  AND EXISTS(
    SELECT 
      1 
    FROM 
      account ATR 
    WHERE 
      ATR.id_owner = CR.id 
      AND ATR.state = &apos;Open&apos; 
      AND ATR.id_currency = &apos;2&apos; 
      AND ATR.tariff IS NOT NULL
  ) 
  AND EXISTS(
    SELECT 
      1 
    FROM 
      account AT 
    WHERE 
      AT.id_owner = CB.id 
      AND AT.state = &apos;Open&apos; 
      AND AT.id_currency = &apos;1&apos; --CURRENCY = RUB
      AND AT.tariff IN (401, 402, 403, 405)
  ) 
  AND NOT EXISTS(
    SELECT 
      1 
    FROM 
      account AT 
    WHERE 
      AT.id_owner = CB.id 
      AND AT.state = &apos;Open&apos; 
      AND AT.id_currency = &apos;1&apos; 
      AND AT.tariff NOT IN (401, 402, 403, 405)
  ) 
  AND NOT EXISTS(
    SELECT 
      1 
    FROM 
      aml_status_customer AR 
    WHERE 
      AR.id_owner = CR.id 
      AND AR.status IS NOT NULL
  ) 
GROUP BY 
  UD.external_id, 
  CR.permanent_id, 
  CB.permanent_id, 
  CR.id 
ORDER BY 
  dbms_random.VALUE desc FETCH first 1 ROWS only  </stringProp>
                      <stringProp name="queryArguments"></stringProp>
                      <stringProp name="queryArgumentsTypes"></stringProp>
                      <stringProp name="queryTimeout"></stringProp>
                      <stringProp name="queryType">Select Statement</stringProp>
                      <stringProp name="resultSetHandler">Store as String</stringProp>
                      <stringProp name="resultSetMaxRows"></stringProp>
                      <stringProp name="resultVariable"></stringProp>
                      <stringProp name="variableNames">crypto_code,customer_code_fiz,customer_code</stringProp>
                    </JDBCSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                          </elementProp>
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code;</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.[?((@.gkCode ==&quot;40701-1&quot;|| @.gkCode == &quot;40702-1&quot;|| @.gkCode == &quot;40703-1&quot;|| @.gkCode == &quot;40802-1&quot;|| @.gkCode == &quot;40802-11&quot;) &amp;&amp; @.currency==&quot;RUB&quot;&amp;&amp; @.typeCode==&quot;01&quot;&amp;&amp; @.cbsState==&quot;OPENED&quot;)].code;.[?((@.gkCode ==&quot;40701-1&quot;|| @.gkCode == &quot;40702-1&quot;|| @.gkCode == &quot;40703-1&quot;|| @.gkCode == &quot;40802-1&quot;|| @.gkCode == &quot;40802-11&quot;)  &amp;&amp; @.currency==&quot;RUB&quot;&amp;&amp; @.typeCode==&quot;01&quot;&amp;&amp; @.cbsState==&quot;OPENED&quot;)].bankCode</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос расчетных счетов в апибанке с тарифами" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/short/settlement?owner=${customer_code}</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                          </elementProp>
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="cbsKey Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">cbsKey</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.owner == &apos;${customer_code}&apos;)].cbsKey</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                      <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="" elementType="Header">
                              <stringProp name="Header.name">authorization</stringProp>
                              <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If available_balance &lt;= 9900" enabled="true">
                        <stringProp name="IfController.condition">${available_balance} &lt;= 9900</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                      </IfController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Пополняем баланс через stand-helper" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
  &quot;account_number&quot;: &quot;${account_code}&quot;,&#xd;
  &quot;currency&quot;: &quot;&quot;,&#xd;
  &quot;methodName&quot;: &quot;sendEnrollment&quot;,&#xd;
  &quot;stand&quot;: &quot;${__uppercase(${__P(layer)})}&quot;,&#xd;
  &quot;sum&quot;: &quot;${__Random(10000,15000)}&quot;,&#xd;
  &quot;type&quot;: &quot;RUB&quot;&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">stand-helper.bank24.int</stringProp>
                          <stringProp name="HTTPSampler.port"></stringProp>
                          <stringProp name="HTTPSampler.protocol"></stringProp>
                          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                          <stringProp name="HTTPSampler.path">/execute</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout">65000</stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                          <hashTree/>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                            <stringProp name="cacheKey">false</stringProp>
                            <stringProp name="filename">${_allure_config_path}</stringProp>
                            <stringProp name="parameters">continue</stringProp>
                            <stringProp name="script"></stringProp>
                            <stringProp name="scriptLanguage">groovy</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                          <stringProp name="HTTPSampler.port"></stringProp>
                          <stringProp name="HTTPSampler.protocol"></stringProp>
                          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                          <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                          <stringProp name="HTTPSampler.method">GET</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="" elementType="Header">
                                <stringProp name="Header.name">authorization</stringProp>
                                <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                          <hashTree/>
                          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                            <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                            <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                          </JSONPostProcessor>
                          <hashTree/>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                            <stringProp name="cacheKey">false</stringProp>
                            <stringProp name="filename">${_allure_config_path}</stringProp>
                            <stringProp name="parameters">continue</stringProp>
                            <stringProp name="script"></stringProp>
                            <stringProp name="scriptLanguage">groovy</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания услуги - ${__timeShift(yyyy-MM-dd,,P365D,,)} " enabled="true">
                      <stringProp name="JSON_PATH">.result.date_end</stringProp>
                      <stringProp name="EXPECTED_VALUE">[&quot;${__timeShift(yyyy-MM-dd,,P365D,,)}&quot;]</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем срок действия услуги - 12 месяцев" enabled="true">
                      <stringProp name="JSON_PATH">.result.period</stringProp>
                      <stringProp name="EXPECTED_VALUE">12</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем услугу, которую подключили клиенту" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">with customer as (	
	select id as customer_id from stepler_customer sc where customer_code =&apos;300021043&apos;
	)
	
select ss.&quot;name&quot;, ss.full_name  
from 
stepler_service ss join stepler_serviceconnection ss2 on ss.id=ss2.service_id 
join customer on ss2.customer_id = customer.customer_id 
order by ss2.created  desc
limit 1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames"></stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Код услуги клиента - TAX_COUNT_IN_EXP" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1931031911">TAX_COUNT_IN_EXP</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Название услуги клиента - Бухподдержка на «Доходы минус расходы»" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="1365880530">Бухподдержка на «Доходы минус расходы»</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ИП на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ИП на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ИП на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ИП на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ООО" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (ЕНВД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на ЕНВД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕНВД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый налог на временный доход (ЕНВД)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (УСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на УСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы 6%&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (Патент)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на Патенте&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на Патенте без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Патент&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (УСН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_tax_service ООО на УСН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_tax_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_tax_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="BUNDLE_BASE_TAX_COUNT" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ИП" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ИП на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ИП на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ИП на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ИП на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ИП на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ИП на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ИП на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ООО" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (ЕНВД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на ЕНВД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕНВД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый налог на временный доход (ЕНВД)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (УСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на УСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы 6%&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (Патент)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на Патенте&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на Патенте без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Патент&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT (УСН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service ООО на УСН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_BASE_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_BASE_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="BUNDLE_WB_TAX_COUNT" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ИП" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ИП на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ИП на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ИП на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ИП на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ИП на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ИП на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ИП на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ООО" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (ЕНВД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на ЕНВД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕНВД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый налог на временный доход (ЕНВД)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (УСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на УСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы 6%&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (Патент)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на Патенте&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на Патенте без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Патент&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_WB_TAX_COUNT (УСН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_WB_TAX_COUNT через connect_service ООО на УСН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_WB_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_WB_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_WB_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_WB_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="BUNDLE_MONEYBOX_TAX_COUNT" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service_by_account" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ИП" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ИП на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ИП на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ИП на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ИП на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ИП на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ИП на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ИП на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ООО" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (ЕНВД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на ЕНВД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕНВД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый налог на временный доход (ЕНВД)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (УСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на УСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы 6%&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (Патент)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на Патенте&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на Патенте без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Патент&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_MONEYBOX_TAX_COUNT (УСН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_MONEYBOX_TAX_COUNT через connect_service_by_account ООО на УСН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="BUNDLE_PATENT_TAX_COUNT" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service_by_account" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ИП" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ИП на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ИП на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ИП на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ИП на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ИП на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ИП на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ИП на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;INDIVIDUAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ООО" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (АУСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на АУСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы-Расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (АУСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на АУСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на АУСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;АУСН Доходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (УСН Д-Р)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на УСН Д-Р&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Д-Р без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы - расходы&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (ОСНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на ОСНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ОСНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Общая система налогообложения (ОСНО, ОСН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (неиз. СНО)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на неизв. СНО&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на неизв СНО без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Неизвестная система налогооблажения&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (ЕСХН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на ЕСХН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕСХН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (НПД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на НПД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на НПД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;НПД&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (ЕНВД)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на ЕНВД&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на ЕНВД без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Единый налог на временный доход (ЕНВД)&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (УСН Доходы)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на УСН Доходы&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН Доходы без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН доходы 6%&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (Патент)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на Патенте&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на Патенте без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;Патент&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_PATENT_TAX_COUNT (УСН)" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">true</boolProp>
                </TransactionController>
                <hashTree>
                  <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);
vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Подключение клиенту с неподходящим профилем&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_PATENT_TAX_COUNT через connect_service_by_account ООО на УСН&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент ИП на АУСН Д-Р&quot;);</stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Sampler>
                  <hashTree/>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ООО на УСН без подключенной и подключаемой услуги" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select customer_code
	from stepler_customer sc
	inner join stepler_serviceconnection ssc on sc.id=ssc.customer_id
	where sc.organization_type=&apos;LEGAL_ENTITY&apos; 
		and sc.taxation_type_id = (select id from stepler_taxationtype where name=&apos;УСН&apos;) 
		and ssc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
	order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">start issues=[TAXDEV-451]</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем наименование организации" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select full_name  
	from stepler_customer sc 
	where customer_code =&apos;${customer_code}&apos;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">full_name</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;full_name&quot;,vars[&apos;full_name_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_PATENT_TAX_COUNT" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_PATENT_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем код ошибки - WRONG_PROFILE" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].code</stringProp>
                      <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сообщение об ошибке - Клиенту не подходит услуга BUNDLE_PATENT_TAX_COUNT" enabled="true">
                      <stringProp name="JSON_PATH">.error.data.errors.[*].message</stringProp>
                      <stringProp name="EXPECTED_VALUE">Клиенту ${customer_code} ${full_name} не подходит услуга BUNDLE_PATENT_TAX_COUNT</stringProp>
                      <boolProp name="JSONVALIDATION">true</boolProp>
                      <boolProp name="EXPECT_NULL">false</boolProp>
                      <boolProp name="INVERT">false</boolProp>
                      <boolProp name="ISREGEX">false</boolProp>
                    </JSONPathAssertion>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters">stop</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="script"></stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
