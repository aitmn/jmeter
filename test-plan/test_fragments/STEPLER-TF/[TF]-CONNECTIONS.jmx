<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Услуги" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="TAX_COUNT" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (позитив без списания комиссии)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;TAX_COUNT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_service, без списания комиссии&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nPrecondition\\nНайти клиента без подключенной услуги, подходящих под Персональную бухгалтерию для УСН 6%\\n\\nselect customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id=&apos;7&apos;;\\n\\nУ клиента должен быть открытый рублевый расчетный счет 40802810*\\n\\nПроверить, что на счете недостаточно денег\\nhttps://apibank-http.query.consul-pre/v3/short/account/bankCode/code(из пункта выше)/balances\\nУменьшить сумму на счете можно с помощью перевода контрагентам&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;11656&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;account_code&quot;,&quot;NOT_FOUND&quot;);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (account_code == NOT_FOUND)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(&quot;${account_code}&quot; == &quot;NOT_FOUND&quot;)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">with st as (select sc.customer_code,   array_agg(c.status) as statuses
            from stepler_customer sc join stepler_settlement ss on ss.customer_id  = sc.id join stepler_serviceconnection c on c.customer_id =sc.id 
	where   sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		group by customer_code
		)
select *
from st
where not (&apos;CONNECTED&apos; = any (statuses)) and not (&apos;CONNECTS&apos; = any (statuses))
order by random() limit 1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;,&#xd;
    &quot;to_charge_commission&quot;: false&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям status" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям service" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем отсутствие ошибок подключения услуги" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select count(*)
	from stepler_connectioncomission 
	where stepler_connectioncomission.connection_id in 
		(select  stepler_serviceconnection.id 
			from stepler_serviceconnection 
			join stepler_customer on stepler_serviceconnection.customer_id=stepler_customer.id and customer_code=&apos;${customer_code}&apos;)
	and created &gt;= NOW() - INTERVAL &apos;5 MINUTES&apos;;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion &apos;Ошибка списания комиссии отсутствует&apos;" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="957827765">count
0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message">Ошибка списания комиссии присутствует</stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (позитив с одним счетом)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;TAX_COUNT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_cap_service&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.public_connect_service)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nУ клиента должен быть открытый рублевый расчетный счет 40802810*\\nДолжно быть достаточно денег для подключение услуги (пополнить счёт можно через [https://stand-helper.bank24.int](https://stand-helper.bank24.int))&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;11673&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270,TAXDEV-154]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &lt;= 5000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &lt;= 5000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">with st as (select sc.customer_code,   array_agg(c.status) as statuses
            from stepler_customer sc join stepler_settlement ss on ss.customer_id  = sc.id join stepler_serviceconnection c on c.customer_id =sc.id 
	where   sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		group by customer_code
		)
select *
from st
where not (&apos;CONNECTED&apos; = any (statuses)) and not (&apos;CONNECTS&apos; = any (statuses))
order by random() limit 1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If available_balance &lt;= 5000" enabled="true">
                      <stringProp name="IfController.condition">${available_balance} &lt;= 5000</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Пополняем баланс через stand-helper" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
  &quot;account_number&quot;: &quot;${account_code}&quot;,&#xd;
  &quot;currency&quot;: &quot;&quot;,&#xd;
  &quot;methodName&quot;: &quot;sendEnrollment&quot;,&#xd;
  &quot;stand&quot;: &quot;${__uppercase(${__P(layer)})}&quot;,&#xd;
  &quot;sum&quot;: &quot;${__Random(5000,10000)}&quot;,&#xd;
  &quot;type&quot;: &quot;RUB&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">stand-helper.bank24.int</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/execute</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout">65000</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="" elementType="Header">
                              <stringProp name="Header.name">authorization</stringProp>
                              <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">2000</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям result" enabled="true">
                    <stringProp name="JSON_PATH">$.result</stringProp>
                    <stringProp name="EXPECTED_VALUE"></stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (валидация на нерублевый счет)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Валидация параметров&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_cap_service. Счёт валютный&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.public_connect_service)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nПроверяем ошибку валидации на валютный счет&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;13171&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;account_code&quot;,&quot;NOT_FOUND&quot;);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270,TAXDEV-154]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (account_code == NOT_FOUND)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(&quot;${account_code}&quot; == &quot;NOT_FOUND&quot;)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">with st as (select sc.customer_code,   array_agg(c.status) as statuses
            from stepler_customer sc join stepler_settlement ss on ss.customer_id  = sc.id join stepler_serviceconnection c on c.customer_id =sc.id 
	where   sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		group by customer_code
		)
select *
from st
where not (&apos;CONNECTED&apos; = any (statuses)) and not (&apos;CONNECTS&apos; = any (statuses))
order by random() limit 1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency != &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency != &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">NO_ACCOUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Указанный счет ${account_code}:${bank_code} не является текущим рублёвым счетом</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (валидация на параметры запроса)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Валидация параметров&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Вилидация параметров запроса connect_cap_service&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.public_connect_service)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nПроверяем валидации&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;13170&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;account_code&quot;,&quot;NOT_FOUND&quot;);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270,TAXDEV-154]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (account_code == NOT_FOUND)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(&quot;${account_code}&quot; == &quot;NOT_FOUND&quot;)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">with st as (select sc.customer_code,   array_agg(c.status) as statuses
            from stepler_customer sc join stepler_settlement ss on ss.customer_id  = sc.id join stepler_serviceconnection c on c.customer_id =sc.id 
	where   sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		group by customer_code
		)
select *
from st
where not (&apos;CONNECTED&apos; = any (statuses)) and not (&apos;CONNECTS&apos; = any (statuses))
order by random() limit 1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Невалидный параметр счета" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}1&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Невалидный номер счета ${account_code}1</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Параметр счета пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям result" enabled="true">
                    <stringProp name="JSON_PATH">$.result</stringProp>
                    <stringProp name="EXPECTED_VALUE"></stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Параметр счета отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$..error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Бик не найден" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}1&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$..error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Параметр бика пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$..error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Параметр бика отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$..error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Параметр клиента пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Колвир код  невалиден</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Параметр клиента отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: public_connect_service() missing 1 required positional argument: &apos;customer_code&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Параметр service_name пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: public_connect_service() missing 1 required positional argument: &apos;customer_code&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_cap_service: Невалидный параметр costomer_code" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}1&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Колвир код ${customer_code}1 невалиден</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (не хватает денег)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;TAX_COUNT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_cap_service. На счете недостаточно средств&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.public_connect_service)\\n\\n---\\nНайти клиента без подключенной услуги, подходящих под Персональную бухгалтерию для УСН 6%\\nselect customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id=&apos;7&apos;;\\nПроверить, что у клиента есть открытый рублевый счет (для запроса нужна авторизация, номер счета начинается на 408*)\\nhttps://apibank-http.query.consul-pre/v3/short/account?bankCode=044525999&amp;owner=customer_code&amp;showClosed=false\\nПроверить, что на счете недостаточно денег\\nhttps://apibank-http.query.consul-pre/v3/short/account/bankCode/code(из пункта выше)/balances\\nУменьшить сумму на счете можно с помощью перевода контрагентам\\nСумму комиссии можно посмотреть во вложении СНО РКО и Тарифы бухгалтерии.xlsx&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;13105&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270,TAXDEV-154]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &gt;= 1000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &gt;= 1000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">with st as (select sc.customer_code,   array_agg(c.status) as statuses
            from stepler_customer sc join stepler_settlement ss on ss.customer_id  = sc.id join stepler_serviceconnection c on c.customer_id =sc.id 
	where   sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		group by customer_code
		)
select *
from st
where not (&apos;CONNECTED&apos; = any (statuses)) and not (&apos;CONNECTS&apos; = any (statuses))
order by random() limit 1;</stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям result" enabled="true">
                    <stringProp name="JSON_PATH">$.result</stringProp>
                    <stringProp name="EXPECTED_VALUE"></stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;FREE_TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">FREE_TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;FREE_TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">FREE_TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем ошибку подключения услуги" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select status, error_message
	from stepler_connectioncomission 
	where stepler_connectioncomission.connection_id in 
		(select  stepler_serviceconnection.id 
			from stepler_serviceconnection 
			join stepler_customer on stepler_serviceconnection.customer_id=stepler_customer.id and customer_code=&apos;${customer_code}&apos;)
	and created &gt;= NOW() - INTERVAL &apos;5 MINUTES&apos;;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion &apos;Недопустимый остаток в процессинге по картсчету OR Платеж на заданную сумму запрещен OR Есть более приоритетный платеж&apos;" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-82277812">Недопустимый остаток в процессинге по картсчету</stringProp>
                      <stringProp name="-1704387015">Платеж на заданную сумму запрещен</stringProp>
                      <stringProp name="1654571736">Есть более приоритетный платеж</stringProp>
                      <stringProp name="41222230">*ORA*</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message">Ошибка списания комиссии отсутствует</stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">34</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion &apos;FAILED&apos;" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2066319421">FAILED</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message">Статус взимания комиссии успешный</stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service_by_account" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (позитив с одним счетом)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;TAX_COUNT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_service_by_account&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nУ клиента должен быть открытый рублевый расчетный счет 40802810*\\nДолжно быть достаточно денег для подключение услуги (пополнить счёт можно через [https://stand-helper.bank24.int](https://stand-helper.bank24.int))&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270,TAXDEV-154]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &lt;= 5000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &lt;= 5000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If available_balance &lt;= 5000" enabled="true">
                      <stringProp name="IfController.condition">${available_balance} &lt;= 5000</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Пополняем баланс через stand-helper" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
  &quot;account_number&quot;: &quot;${account_code}&quot;,&#xd;
  &quot;currency&quot;: &quot;&quot;,&#xd;
  &quot;methodName&quot;: &quot;sendEnrollment&quot;,&#xd;
  &quot;stand&quot;: &quot;${__uppercase(${__P(layer)})}&quot;,&#xd;
  &quot;sum&quot;: &quot;${__Random(5000,10000)}&quot;,&#xd;
  &quot;type&quot;: &quot;RUB&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">stand-helper.bank24.int</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/execute</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout">65000</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="" elementType="Header">
                              <stringProp name="Header.name">authorization</stringProp>
                              <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">2000</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям статус подключения" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям подключаемую услугу" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям дату начала действия услуги" enabled="true">
                    <stringProp name="JSON_PATH">$.result.date_begin</stringProp>
                    <stringProp name="EXPECTED_VALUE">${__time(yyyy-MM-dd,)}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status Assertion = CONNECTED" enabled="true">
                    <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="date_begin Assertion = ${__time(yyyy-MM-dd,)}" enabled="true">
                    <stringProp name="JSON_PATH">$.result.connection.date_begin</stringProp>
                    <stringProp name="EXPECTED_VALUE">${__time(yyyy-MM-dd,)}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Отключаем клиенту услугу" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
    &quot;params&quot;: {&#xd;
        &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
    },&#xd;
    &quot;method&quot;: &quot;disconnect_service&quot;,&#xd;
    &quot;id&quot;: &quot;${__UUID()}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">api/v1/private/jsonrpc</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                    <collectionProp name="AuthManager.auth_list">
                      <elementProp name="" elementType="Authorization">
                        <stringProp name="Authorization.url"></stringProp>
                        <stringProp name="Authorization.username">noga</stringProp>
                        <stringProp name="Authorization.password">Nb123^^7</stringProp>
                        <stringProp name="Authorization.domain"></stringProp>
                        <stringProp name="Authorization.realm"></stringProp>
                      </elementProp>
                    </collectionProp>
                    <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
                  </AuthManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что в ответе статус услуги =&apos;DISCONNECTED&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">DISCONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (не хватает денег)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;TAX_COUNT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_service_by_account. На счете недостаточно средств&quot;); 
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nУ клиента должен быть открытый рублевый расчетный счет 40802810&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270,TAXDEV-154]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &gt;= 1000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &gt;= 1000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям статус подключения" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям подключаемую услугу" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям дату начала действия услуги" enabled="true">
                    <stringProp name="JSON_PATH">$.result.date_begin</stringProp>
                    <stringProp name="EXPECTED_VALUE">${__time(yyyy-MM-dd,)}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status Assertion = CONNECTED" enabled="true">
                    <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;BUNDLE_BASE_TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                    <stringProp name="EXPECTED_VALUE">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="date_begin Assertion = ${__time(yyyy-MM-dd,)}" enabled="true">
                    <stringProp name="JSON_PATH">$.result.connection.date_begin</stringProp>
                    <stringProp name="EXPECTED_VALUE">${__time(yyyy-MM-dd,)}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем ошибку подключения услуги" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select status, error_message
	from stepler_connectioncomission 
	where stepler_connectioncomission.connection_id in 
		(select  stepler_serviceconnection.id 
			from stepler_serviceconnection 
			join stepler_customer on stepler_serviceconnection.customer_id=stepler_customer.id and customer_code=&apos;${customer_code}&apos;)
	and created &gt;= NOW() - INTERVAL &apos;5 MINUTES&apos;;</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion &apos;Недопустимый остаток в процессинге по картсчету OR Платеж на заданную сумму запрещен OR Есть более приоритетный платеж&apos;" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-82277812">Недопустимый остаток в процессинге по картсчету</stringProp>
                      <stringProp name="-1704387015">Платеж на заданную сумму запрещен</stringProp>
                      <stringProp name="1654571736">Есть более приоритетный платеж</stringProp>
                      <stringProp name="41222230">*ORA*</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message">Ошибка списания комиссии отсутствует</stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">34</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion &apos;FAILED&apos;" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2066319421">FAILED</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message">Статус взимания комиссии успешный</stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT (валидация на нерублевый счет)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Валидация параметров&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_service_by_account. Счёт валютный&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.public_connect_service)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nПроверяем ошибку валидации на валютный счет&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;account_code&quot;,&quot;NOT_FOUND&quot;);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270,TAXDEV-154]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (account_code == NOT_FOUND)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(&quot;${account_code}&quot; == &quot;NOT_FOUND&quot;)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency != &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency != &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">NO_ACCOUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Указанный счет ${account_code}:${bank_code} не является текущим рублёвым счетом</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Вилидация параметров запроса connect_service_by_account" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Валидация параметров&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Вилидация параметров запроса connect_service_by_account&quot;); </stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;account_code&quot;,&quot;NOT_FOUND&quot;);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270,TAXDEV-154]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (account_code == NOT_FOUND)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(&quot;${account_code}&quot; == &quot;NOT_FOUND&quot;)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Невалидный номер счета" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}1&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Невалидный номер счета ${account_code}1</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Параметр счета пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям result" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Параметр счета отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Указан не верный номер счета" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;40802810403500020291&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Бик не найден" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}1&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Параметр бика пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Параметр бика отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Параметр клиента пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Колвир код  невалиден</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Параметр клиента отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: connect_service_by_account() missing 1 required positional argument: &apos;customer_code&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Параметр service_name пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: connect_service_by_account() missing 1 required positional argument: &apos;customer_code&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Параметр service_name невалидный" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_1&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Неизвестный код услуги TAX_COUNT_1</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">UNKNOWN_SERVICE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Услуга не подходит клиенту" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;AUSN&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_account: Невалидный параметр costomer_code" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}1&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Колвир код ${customer_code}1 невалиден</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_by_card" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT через connect_service_by_card_via_url" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;TAX_COUNT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT через connect_service_by_card_via_url&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_by_card)\\n\\n---\\nНайти клиента без подключенной услуги, подходящих под услугу Отчетность и ИП:\\n select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id=&apos;1&apos; or taxation_type_id=&apos;4&apos;;\\nЮР лицо: select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;LEGAL_ENTITY&apos;;\\nПроверить, что у клиента есть открытый рублевый счет (для запроса нужна авторизация)\\nhttps://apibank-http.query.consul-pre/v3/short/account?bankCode=044525999&amp;owner=customer_code&amp;showClosed=false\\nПроверить, что на счете достаточно денег\\nhttps://apibank-http.query.consul-pre/v3/short/account/bankCode/code(из пункта выше)/balances\\nПополнить счет, при необходимости, можно на https://stand-helper.bank24.int/&quot;); </stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">customer_code</stringProp>
                </JDBCSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем, что нашелся клиент" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2144132690">customer_code</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">12</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;,&#xd;
    &quot;email&quot;: &quot;11@ya.ru&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем, что получили ссылку на оплату в ответе" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-267509676">&quot;result&quot;: &quot;https://yoomoney.ru/checkout/payments/v2/contract?orderId=</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;,&#xd;
    &quot;email&quot;: &quot;11@ya.ru&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем, что получили ссылку на оплату в ответе" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2130240523">https://yoomoney.ru/payments/external/confirmation</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключаемых услуг (get_pending_connection)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status Assertion = &apos;CONNECTS&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем наличие записи в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select stepler_serviceconnection.* 
	from stepler_serviceconnection 
	join stepler_customer on stepler_customer.id = stepler_serviceconnection.customer_id and stepler_customer.customer_code=&apos;${customer_code}&apos; and  stepler_serviceconnection.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">6</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Отключаем клиенту услугу" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
    &quot;params&quot;: {&#xd;
        &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
    },&#xd;
    &quot;method&quot;: &quot;disconnect_service&quot;,&#xd;
    &quot;id&quot;: &quot;${__UUID()}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">api/v1/private/jsonrpc</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                    <collectionProp name="AuthManager.auth_list">
                      <elementProp name="" elementType="Authorization">
                        <stringProp name="Authorization.url"></stringProp>
                        <stringProp name="Authorization.username">noga</stringProp>
                        <stringProp name="Authorization.password">Nb123^^7</stringProp>
                        <stringProp name="Authorization.domain"></stringProp>
                        <stringProp name="Authorization.realm"></stringProp>
                      </elementProp>
                    </collectionProp>
                    <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
                  </AuthManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что в ответе статус услуги =&apos;DISCONNECTED&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">DISCONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Вилидация параметров запроса connect_service_by_card_via_url" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Валидация параметров&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Вилидация параметров запроса connect_service_by_card_via_url&quot;); </stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">customer_code</stringProp>
                </JDBCSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем, что нашелся клиент" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2144132690">customer_code</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">12</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">start</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card_via_url:email невалидный" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;,&#xd;
    &quot;email&quot;: &quot;11yaru&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card_via_url:email пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;,&#xd;
    &quot;email&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: connect_by_card() missing 1 required positional argument: &apos;email&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card_via_url:email отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: connect_by_card() missing 1 required positional argument: &apos;email&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card_via_url: Невалидный параметр costomer_code" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}1&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;,&#xd;
    &quot;email&quot;: &quot;11@ya.ru&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Колвир код ${customer_code}1 невалиден</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card_via_url: Параметр клиента пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;,&#xd;
    &quot;email&quot;: &quot;11@ya.ru&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Колвир код  невалиден</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card_via_url: Параметр клиента отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;,&#xd;
    &quot;email&quot;: &quot;11@ya.ru&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: connect_service_by_account() missing 1 required positional argument: &apos;customer_code&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card_via_url: Параметр service_name пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;&quot;,&#xd;
    &quot;email&quot;: &quot;11@ya.ru&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: connect_service_by_account() missing 1 required positional argument: &apos;customer_code&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card_via_url: Параметр service_name невалидный" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT2&quot;,&#xd;
    &quot;email&quot;: &quot;11@ya.ru&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Неизвестный код услуги TAX_COUNT_1</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">UNKNOWN_SERVICE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card_via_url: Услуга не подходит клиенту" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card_via_url&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;AUSN&quot;,&#xd;
    &quot;email&quot;: &quot;11@ya.ru&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="REPORT" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_cap_service" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение REPORT через connect_cap_service, без указания счета " enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;REPORT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение REPORT через connect_cap_service, без указания счета&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.public_connect_service)\\n\\n---\\nНайти клиента без подключенной услуги, подходящих под услугу Отчетность и ИП:\\n select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id=&apos;1&apos; or taxation_type_id=&apos;4&apos;;\\nЮР лицо: select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;LEGAL_ENTITY&apos;;\\nПроверить, что у клиента есть открытый рублевый счет (для запроса нужна авторизация)\\nhttps://apibank-http.query.consul-pre/v3/short/account?bankCode=044525999&amp;owner=customer_code&amp;showClosed=false\\nПроверить, что на счете достаточно денег\\nhttps://apibank-http.query.consul-pre/v3/short/account/bankCode/code(из пункта выше)/balances\\nПополнить счет, при необходимости, можно на https://stand-helper.bank24.int/&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;11674&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &lt;= 5000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &lt;= 5000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;1&apos; or sc.taxation_type_id = &apos;4&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If available_balance &lt;= 5000" enabled="true">
                      <stringProp name="IfController.condition">${available_balance} &lt;= 5000</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Пополняем баланс через stand-helper" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
  &quot;account_number&quot;: &quot;${account_code}&quot;,&#xd;
  &quot;currency&quot;: &quot;&quot;,&#xd;
  &quot;methodName&quot;: &quot;sendEnrollment&quot;,&#xd;
  &quot;stand&quot;: &quot;${__uppercase(${__P(layer)})}&quot;,&#xd;
  &quot;sum&quot;: &quot;${__Random(5000,10000)}&quot;,&#xd;
  &quot;type&quot;: &quot;RUB&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">stand-helper.bank24.int</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/execute</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout">65000</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="" elementType="Header">
                              <stringProp name="Header.name">authorization</stringProp>
                              <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">2000</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги REPORT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;REPORT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям result" enabled="true">
                    <stringProp name="JSON_PATH">$.result</stringProp>
                    <stringProp name="EXPECTED_VALUE"></stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги REPORT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;REPORT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="false">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;REPORT&apos;" enabled="false">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="false">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT&apos;" enabled="false">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем наличие записи в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select stepler_serviceconnection.* 
	from stepler_serviceconnection 
	join stepler_customer on stepler_customer.id = stepler_serviceconnection.customer_id and stepler_customer.customer_code=&apos;${customer_code}&apos; and  stepler_serviceconnection.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение REPORT (позитив без списания комиссии)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;REPORT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение REPORT через connect_service, без списания комиссии&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.connect_service)\\n\\n---\\nНайти клиента без подключенной услуги, подходящих под услугу &apos;Отчетность&apos;:\\n\\nИП: select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id=&apos;1&apos; or taxation_type_id=&apos;4&apos;;\\n\\nЮР лицо: select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;LEGAL_ENTITY&apos;;\\n\\nУ клиента должен быть открытый рублевый расчетный счет 40802810*\\n\\nПроверить, что на счете недостаточно денег\\nhttps://apibank-http.query.consul-pre/v3/short/account/bankCode/code(из пункта выше)/balances\\nУменьшить сумму на счете можно с помощью перевода контрагентам&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;11669&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &gt;= 1000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &gt;= 1000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;1&apos; or sc.taxation_type_id = &apos;4&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги REPORT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;REPORT&quot;,&#xd;
    &quot;to_charge_commission&quot;: false&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям status = &apos;CONNECTED&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям service = &apos;REPORT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;REPORT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;REPORT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем отсутствие ошибок подключения услуги" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select count(*)
	from stepler_connectioncomission 
	where stepler_connectioncomission.connection_id in 
		(select  stepler_serviceconnection.id 
			from stepler_serviceconnection 
			join stepler_customer on stepler_serviceconnection.customer_id=stepler_customer.id and customer_code=&apos;${customer_code}&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion &apos;Ошибка списания комиссии отсутствует&apos;" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="957827765">count
0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message">Ошибка списания комиссии присутствует</stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service_by_account" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение REPORT через connect_service_by_account, без указания счета " enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;REPORT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение REPORT через connect_service_by_account, без указания счета&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.public_connect_service)\\n\\n---\\nНайти клиента без подключенной услуги, подходящих под услугу Отчетность и ИП:\\n select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id=&apos;1&apos; or taxation_type_id=&apos;4&apos;;\\nЮР лицо: select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;LEGAL_ENTITY&apos;;\\nПроверить, что у клиента есть открытый рублевый счет (для запроса нужна авторизация)\\nhttps://apibank-http.query.consul-pre/v3/short/account?bankCode=044525999&amp;owner=customer_code&amp;showClosed=false\\nПроверить, что на счете достаточно денег\\nhttps://apibank-http.query.consul-pre/v3/short/account/bankCode/code(из пункта выше)/balances\\nПополнить счет, при необходимости, можно на https://stand-helper.bank24.int/&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start issues=[STEPLER-270]</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &lt;= 5000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &lt;= 5000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;1&apos; or sc.taxation_type_id = &apos;4&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If available_balance &lt;= 5000" enabled="true">
                      <stringProp name="IfController.condition">${available_balance} &lt;= 5000</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Пополняем баланс через stand-helper" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
  &quot;account_number&quot;: &quot;${account_code}&quot;,&#xd;
  &quot;currency&quot;: &quot;&quot;,&#xd;
  &quot;methodName&quot;: &quot;sendEnrollment&quot;,&#xd;
  &quot;stand&quot;: &quot;${__uppercase(${__P(layer)})}&quot;,&#xd;
  &quot;sum&quot;: &quot;${__Random(5000,10000)}&quot;,&#xd;
  &quot;type&quot;: &quot;RUB&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">stand-helper.bank24.int</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/execute</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout">65000</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="" elementType="Header">
                              <stringProp name="Header.name">authorization</stringProp>
                              <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">2000</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги REPORT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;REPORT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям услугу в ответе = &apos;REPORT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям дату начала действия услуги" enabled="true">
                    <stringProp name="JSON_PATH">$.result.date_begin</stringProp>
                    <stringProp name="EXPECTED_VALUE">${__time(yyyy-MM-dd,)}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги REPORT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;REPORT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="false">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;REPORT&apos;" enabled="false">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем наличие записи в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select stepler_serviceconnection.* 
	from stepler_serviceconnection 
	join stepler_customer on stepler_customer.id = stepler_serviceconnection.customer_id and stepler_customer.customer_code=&apos;${customer_code}&apos; and  stepler_serviceconnection.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">6</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Отключаем клиенту услугу" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
    &quot;params&quot;: {&#xd;
        &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
    },&#xd;
    &quot;method&quot;: &quot;disconnect_service&quot;,&#xd;
    &quot;id&quot;: &quot;${__UUID()}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">api/v1/private/jsonrpc</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                    <collectionProp name="AuthManager.auth_list">
                      <elementProp name="" elementType="Authorization">
                        <stringProp name="Authorization.url"></stringProp>
                        <stringProp name="Authorization.username">noga</stringProp>
                        <stringProp name="Authorization.password">Nb123^^7</stringProp>
                        <stringProp name="Authorization.domain"></stringProp>
                        <stringProp name="Authorization.realm"></stringProp>
                      </elementProp>
                    </collectionProp>
                    <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
                  </AuthManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что в ответе статус услуги =&apos;DISCONNECTED&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">DISCONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_by_card" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение REPORT через connect_service_by_card" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;REPORT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение REPORT через connect_service_by_card&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_by_card)\\n\\n---\\nНайти клиента без подключенной услуги, подходящих под услугу Отчетность и ИП:\\n select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id=&apos;1&apos; or taxation_type_id=&apos;4&apos;;\\nЮР лицо: select customer_code from stepler_customer where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) and organization_type=&apos;LEGAL_ENTITY&apos;;\\nПроверить, что у клиента есть открытый рублевый счет (для запроса нужна авторизация)\\nhttps://apibank-http.query.consul-pre/v3/short/account?bankCode=044525999&amp;owner=customer_code&amp;showClosed=false\\nПроверить, что на счете достаточно денег\\nhttps://apibank-http.query.consul-pre/v3/short/account/bankCode/code(из пункта выше)/balances\\nПополнить счет, при необходимости, можно на https://stand-helper.bank24.int/&quot;); </stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;1&apos; or sc.taxation_type_id = &apos;4&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">customer_code</stringProp>
                </JDBCSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем, что нашелся клиент" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2144132690">customer_code</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">12</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Создаем платеж на оплату" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;value&quot;: &quot;2.00&quot;,&#xd;
        &quot;currency&quot;: &quot;RUB&quot;&#xd;
    },&#xd;
    &quot;payment_method_data&quot;: {&#xd;
        &quot;type&quot;: &quot;bank_card&quot;&#xd;
    },&#xd;
    &quot;confirmation&quot;: {&#xd;
        &quot;type&quot;: &quot;redirect&quot;,&#xd;
        &quot;return_url&quot;: &quot;https://www.merchant-website.com/return_url&quot;&#xd;
    },&#xd;
    &quot;description&quot;: &quot;Заказ №72&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">api.yookassa.ru</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">v3/payments</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Idempotence-Key</stringProp>
                        <stringProp name="Header.value">${__UUID()}</stringProp>
                      </elementProp>
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_YOOKASSA}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям result" enabled="true">
                    <stringProp name="JSON_PATH">$.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">pending</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">payment_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.payment_method.id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги REPORT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;REPORT&quot;,&#xd;
    &quot;payment_id&quot;: &quot;${payment_id}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям подключаемая услуга = REPORT" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям статус подключения = CONNECTS" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям дату начала подключения" enabled="true">
                    <stringProp name="JSON_PATH">$.result.date_begin</stringProp>
                    <stringProp name="EXPECTED_VALUE">${__time(yyyy-MM-dd,)}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключаемых услуг (get_pending_connection)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;REPORT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                    <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status Assertion = &apos;CONNECTS&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем наличие записи в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select stepler_serviceconnection.* 
	from stepler_serviceconnection 
	join stepler_customer on stepler_customer.id = stepler_serviceconnection.customer_id and stepler_customer.customer_code=&apos;${customer_code}&apos; and  stepler_serviceconnection.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;);
</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings"/>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">6</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Отключаем клиенту услугу" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
    &quot;params&quot;: {&#xd;
        &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
    },&#xd;
    &quot;method&quot;: &quot;disconnect_service&quot;,&#xd;
    &quot;id&quot;: &quot;${__UUID()}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">api/v1/private/jsonrpc</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                    <collectionProp name="AuthManager.auth_list">
                      <elementProp name="" elementType="Authorization">
                        <stringProp name="Authorization.url"></stringProp>
                        <stringProp name="Authorization.username">noga</stringProp>
                        <stringProp name="Authorization.password">Nb123^^7</stringProp>
                        <stringProp name="Authorization.domain"></stringProp>
                        <stringProp name="Authorization.realm"></stringProp>
                      </elementProp>
                    </collectionProp>
                    <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
                  </AuthManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что в ответе статус услуги =&apos;DISCONNECTED&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">DISCONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Вилидация параметров запроса connect_service_by_card" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Валидация параметров&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Вилидация параметров запроса connect_service_by_card&quot;); </stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;1&apos; or sc.taxation_type_id = &apos;4&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">customer_code</stringProp>
                </JDBCSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем, что нашелся клиент" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2144132690">customer_code</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">12</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">start</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card:payment_id невалидный" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;REPORT&quot;,&#xd;
    &quot;payment_id&quot;: &quot;${__UUID()}1&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Неправильно введен uuid платежа в параметр payment_id</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card:payment_id пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;REPORT&quot;,&#xd;
    &quot;payment_id&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Неправильно введен uuid платежа в параметр payment_id</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card:payment_id отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;REPORT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: connect_by_card() missing 1 required positional argument: &apos;payment_id&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card: Невалидный параметр costomer_code" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;payment_id&quot;: &quot;${__UUID()}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}1&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Колвир код ${customer_code}1 невалиден</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card: Параметр клиента пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;payment_id&quot;: &quot;${__UUID()}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">VALIDATION_ERROR</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Колвир код  невалиден</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card: Параметр клиента отсутствует" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;payment_id&quot;: &quot;${__UUID()}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Invalid parameters: connect_by_card() missing 1 required positional argument: &apos;customer_code&apos;</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card: Параметр service_name пустой" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;payment_id&quot;: &quot;${__UUID()}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">UNKNOWN_SERVICE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Неизвестный код услуги </stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card: Параметр service_name невалидный" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;payment_id&quot;: &quot;${__UUID()}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_1&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert message" enabled="true">
                    <stringProp name="JSON_PATH">$.error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">Неизвестный код услуги TAX_COUNT_1</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">UNKNOWN_SERVICE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос connect_service_by_card: Услуга не подходит клиенту" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_card&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;payment_id&quot;: &quot;${__UUID()}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;AUSN&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Assert error code" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">WRONG_PROFILE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TAX_COUNT_EMPLOYEE" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение TAX_COUNT_EMPLOYEE (позитив с одним счетом)" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;TAX_COUNT_EMPLOYEE&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение TAX_COUNT_EMPLOYEE через connect_service&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v1.connect_api.public_connect_service)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nУ клиента должен быть открытый рублевый расчетный счет 40802810*\\nДолжно быть достаточно денег для подключение услуги (пополнить счёт можно через [https://stand-helper.bank24.int](https://stand-helper.bank24.int))\\n\\nВ данном случае комиссия взимается в отдельном сервисе, и в запрос добавляется флаг external_processing = true&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;13368&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &lt;= 5000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &lt;= 5000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If available_balance &lt;= 5000" enabled="true">
                      <stringProp name="IfController.condition">${available_balance} &lt;= 5000</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Пополняем баланс через stand-helper" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
  &quot;account_number&quot;: &quot;${account_code}&quot;,&#xd;
  &quot;currency&quot;: &quot;&quot;,&#xd;
  &quot;methodName&quot;: &quot;sendEnrollment&quot;,&#xd;
  &quot;stand&quot;: &quot;${__uppercase(${__P(layer)})}&quot;,&#xd;
  &quot;sum&quot;: &quot;${__Random(5000,10000)}&quot;,&#xd;
  &quot;type&quot;: &quot;RUB&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">stand-helper.bank24.int</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/execute</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout">65000</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="" elementType="Header">
                              <stringProp name="Header.name">authorization</stringProp>
                              <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">2000</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                        <boolProp name="displayJMeterProperties">false</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">false</boolProp>
                      </DebugSampler>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT_EMPLOYEE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_EMPLOYEE&quot;,&#xd;
    &quot;external_processing&quot;: true&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service name Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги TAX_COUNT_EMPLOYEE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_EMPLOYEE&quot;,&#xd;
    &quot;external_processing&quot;: true&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Pending Service Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.pending_service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Pending Service Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.pending_service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем отсутствие взимания комиссии" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select count(*) from stepler_connectioncomission sc 
	where connection_id  in (select id from stepler_serviceconnection ss 
		where customer_id in (select id from stepler_customer sc where customer_code  = &apos;${customer_code}&apos;));</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion = &apos;0&apos; (Комиссия взимается не у нас)" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="957827765">count
0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Отмена ожидающей услуги (TAX_COUNT_EMPLOYEE) " enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Отмена подключения&quot;);
vars.put(&quot;AllureStory&quot;,&quot;TAX_COUNT_EMPLOYEE&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Отмена ожидающей услуги (TAX_COUNT_EMPLOYEE)&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.v1.html?highlight=cancel_pending_service#stepler.api.v1.connect_api.cancel_pending_service)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nУ клиента должен быть открытый рублевый расчетный счет 40802810*\\nДолжно быть достаточно денег для подключение услуги (пополнить счёт можно через [https://stand-helper.bank24.int](https://stand-helper.bank24.int))\\n\\nнеобходимо оставить заявку на услугу TAX_COUNT_EMPLOYEE и потом уже отменить ее&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;11670&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &lt;= 5000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &lt;= 5000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If available_balance &lt;= 5000" enabled="true">
                      <stringProp name="IfController.condition">${available_balance} &lt;= 5000</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Пополняем баланс через stand-helper" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
  &quot;account_number&quot;: &quot;${account_code}&quot;,&#xd;
  &quot;currency&quot;: &quot;&quot;,&#xd;
  &quot;methodName&quot;: &quot;sendEnrollment&quot;,&#xd;
  &quot;stand&quot;: &quot;${__uppercase(${__P(layer)})}&quot;,&#xd;
  &quot;sum&quot;: &quot;${__Random(5000,10000)}&quot;,&#xd;
  &quot;type&quot;: &quot;RUB&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">stand-helper.bank24.int</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/execute</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout">65000</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="" elementType="Header">
                              <stringProp name="Header.name">authorization</stringProp>
                              <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">2000</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                        <boolProp name="displayJMeterProperties">false</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">false</boolProp>
                      </DebugSampler>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT_EMPLOYEE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_EMPLOYEE&quot;,&#xd;
    &quot;external_processing&quot;: true&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service name Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги TAX_COUNT_EMPLOYEE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_EMPLOYEE&quot;,&#xd;
    &quot;external_processing&quot;: true&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$..error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Pending Service Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.pending_service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Pending Service Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.pending_service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Отменяем услугу TAX_COUNT_EMPLOYEE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;cancel_pending_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_EMPLOYEE&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service name Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status Assertion = &apos;DISCONNECTED&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">DISCONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем отсутствие взимания комиссии" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select count(*) from stepler_connectioncomission sc 
	where connection_id  in (select id from stepler_serviceconnection ss 
		where customer_id in (select id from stepler_customer sc where customer_code  = &apos;${customer_code}&apos;));</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion = &apos;0&apos; (Комиссия взимается не у нас)" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="957827765">count
0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем отмену услуги в stepler_serviceconnection" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select status from stepler_serviceconnection ss 
	where customer_id in (select id from stepler_customer sc where customer_code  = &apos;${customer_code}&apos;)</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Status Assertion = &apos;DISCONNECTED&apos; (Услугу отменилась)" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1290403987">status
DISCONNECTED</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Активация ожидающей услуги (TAX_COUNT_EMPLOYEE) " enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Активация услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;TAX_COUNT_EMPLOYEE&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Активация услуги (только TAX_COUNT_EMPLOYEE)&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.v1.html?highlight=activate_service#stepler.api.v1.connect_api.activate_service)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nУ клиента должен быть открытый рублевый расчетный счет 40802810*\\nДолжно быть достаточно денег для подключение услуги (пополнить счёт можно через [https://stand-helper.bank24.int](https://stand-helper.bank24.int))\\n\\nнеобходимо оставить заявку на услугу TAX_COUNT_EMPLOYEE и потом уже отменить ее&quot;);
vars.put(&quot;AllureManualID&quot;,&quot;11659&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Условное начало" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${tochka20_host}</stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path"></stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную для цикла" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;available_balance&quot;,5000);</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">start</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While (available_balance &lt;= 5000)" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(${available_balance} &lt;= 5000)}
</stringProp>
                </WhileController>
                <hashTree>
                  <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                    <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                    <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id = &apos;7&apos;
				and ss.is_closed = false
				and ss.state = &apos;REG&apos;
		and sc.customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                    <stringProp name="queryArguments"></stringProp>
                    <stringProp name="queryArgumentsTypes"></stringProp>
                    <stringProp name="queryTimeout"></stringProp>
                    <stringProp name="queryType">Select Statement</stringProp>
                    <stringProp name="resultSetHandler">Store as String</stringProp>
                    <stringProp name="resultSetMaxRows"></stringProp>
                    <stringProp name="resultVariable"></stringProp>
                    <stringProp name="variableNames">customer_code</stringProp>
                  </JDBCSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем наличие расчетных счетов у клиента" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/v3/short/account?owner=${customer_code}&amp;showClosed=false</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">authorization</stringProp>
                          <stringProp name="Header.value">${APIBANKA_BASIC_STEPLER}</stringProp>
                        </elementProp>
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="account_code specific Extractor" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">account_code;bank_code</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].code;.[?(@.gkCode =~ /40802-1.*?/i &amp;&amp; @.currency == &apos;RUB&apos;)].bankCode</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND;NOT_FOUND</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                      <stringProp name="cacheKey">false</stringProp>
                      <stringProp name="filename">${_allure_config_path}</stringProp>
                      <stringProp name="parameters">continue</stringProp>
                      <stringProp name="script"></stringProp>
                      <stringProp name="scriptLanguage">groovy</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If account_code is found" enabled="true">
                    <stringProp name="IfController.condition">&quot;${account_code}&quot;!=&quot;NOT_FOUND&quot;</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">authorization</stringProp>
                            <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                      <hashTree/>
                      <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                        <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                        <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                        <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                        <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                      </JSONPostProcessor>
                      <hashTree/>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                        <stringProp name="cacheKey">false</stringProp>
                        <stringProp name="filename">${_allure_config_path}</stringProp>
                        <stringProp name="parameters">continue</stringProp>
                        <stringProp name="script"></stringProp>
                        <stringProp name="scriptLanguage">groovy</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If available_balance &lt;= 5000" enabled="true">
                      <stringProp name="IfController.condition">${available_balance} &lt;= 5000</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Пополняем баланс через stand-helper" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
  &quot;account_number&quot;: &quot;${account_code}&quot;,&#xd;
  &quot;currency&quot;: &quot;&quot;,&#xd;
  &quot;methodName&quot;: &quot;sendEnrollment&quot;,&#xd;
  &quot;stand&quot;: &quot;${__uppercase(${__P(layer)})}&quot;,&#xd;
  &quot;sum&quot;: &quot;${__Random(5000,10000)}&quot;,&#xd;
  &quot;type&quot;: &quot;RUB&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">stand-helper.bank24.int</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/execute</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout">65000</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Проверяем баланс на счете" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">apibank-http.query.consul-${CONSUL_LAYER}</stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/v3/cbs/account/${bank_code}/${account_code}/balances</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="" elementType="Header">
                              <stringProp name="Header.name">authorization</stringProp>
                              <stringProp name="Header.value">Basic c3RlcGxlcjpXUUszSW02czhiRTc=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Balances Extractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">available_balance</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">.available</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                          <stringProp name="ConstantTimer.delay">2000</stringProp>
                        </ConstantTimer>
                        <hashTree/>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                          <stringProp name="cacheKey">false</stringProp>
                          <stringProp name="filename">${_allure_config_path}</stringProp>
                          <stringProp name="parameters">continue</stringProp>
                          <stringProp name="script"></stringProp>
                          <stringProp name="scriptLanguage">groovy</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                        <boolProp name="displayJMeterProperties">false</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">false</boolProp>
                      </DebugSampler>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги TAX_COUNT_EMPLOYEE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_EMPLOYEE&quot;,&#xd;
    &quot;external_processing&quot;: true&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service name Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги TAX_COUNT_EMPLOYEE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;account_code&quot;: &quot;${account_code}&quot;,&#xd;
    &quot;bank_code&quot;: &quot;${bank_code}&quot;,&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_EMPLOYEE&quot;,&#xd;
    &quot;external_processing&quot;: true&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$..error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error message Assertion = &apos;У клиента ${customer_code} происходит подключение услуги&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">У клиента ${customer_code} происходит подключение услуги</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Pending Service Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.pending_service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Pending Service Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.pending_service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Активируем услугу TAX_COUNT_EMPLOYEE" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;activate_service&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;TAX_COUNT_EMPLOYEE&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">authorization</stringProp>
                        <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service name Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status Assertion = &apos;CONNECTED&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем отсутствие взимания комиссии" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select count(*) from stepler_connectioncomission sc 
	where connection_id  in (select id from stepler_serviceconnection ss 
		where customer_id in (select id from stepler_customer sc where customer_code  = &apos;${customer_code}&apos;));</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Count Assertion = &apos;0&apos; (Комиссия взимается не у нас)" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="957827765">count
0</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT_EMPLOYEE&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Проверяем активацию услуги в stepler_serviceconnection" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select status from stepler_serviceconnection ss 
	where customer_id in (select id from stepler_customer sc where customer_code  = &apos;${customer_code}&apos;)</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                </JDBCSampler>
                <hashTree>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Status Assertion = &apos;CONNECTED&apos; (Услугу активировалась)" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="699955089">status
CONNECTED</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BUNDLE_BASE_TAX_COUNT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service_by_account" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение BUNDLE_BASE_TAX_COUNT " enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;BUNDLE_BASE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение BUNDLE_BASE_TAX_COUNT через connect_service_by_account&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nУ клиента должен быть открытый рублевый расчетный счет 40802810*\\nДолжно быть достаточно денег для подключение услуги (пополнить счёт можно через [https://stand-helper.bank24.int](https://stand-helper.bank24.int))&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id  in 
				(select id 
					from stepler_taxationtype
					where name in 
					(&apos;УСН доходы 6%&apos; )
				) 
				and ss.is_closed = false 
		order by random() limit 1 </stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">customer_code</stringProp>
                </JDBCSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">start</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям статус подключения" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям подключаемую услугу" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям дату начала действия услуги" enabled="true">
                    <stringProp name="JSON_PATH">$.result.date_begin</stringProp>
                    <stringProp name="EXPECTED_VALUE">${__time(yyyy-MM-dd,)}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги BUNDLE_BASE_TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_service_by_account&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;BUNDLE_BASE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Message Assertion = &apos;У клиента ${customer_code} уже имеется активное подключение&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$..error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">[&quot;У клиента ${customer_code} уже имеется активное подключение BUNDLE_BASE_TAX_COUNT&quot;]</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error message Assertion = &apos;У клиента ${customer_code} уже имеется активное подключение&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">[&quot;У клиента ${customer_code} уже имеется активное подключение BUNDLE_BASE_TAX_COUNT&quot;]</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Status Assertion = CONNECTED" enabled="true">
                    <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;BUNDLE_BASE_TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                    <stringProp name="EXPECTED_VALUE">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="date_begin Assertion = ${__time(yyyy-MM-dd,)}" enabled="true">
                    <stringProp name="JSON_PATH">$.result.connection.date_begin</stringProp>
                    <stringProp name="EXPECTED_VALUE">${__time(yyyy-MM-dd,)}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Отключаем клиенту услугу" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
    &quot;params&quot;: {&#xd;
        &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
    },&#xd;
    &quot;method&quot;: &quot;disconnect_service&quot;,&#xd;
    &quot;id&quot;: &quot;${__UUID()}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">api/v1/private/jsonrpc</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                    <collectionProp name="AuthManager.auth_list">
                      <elementProp name="" elementType="Authorization">
                        <stringProp name="Authorization.url"></stringProp>
                        <stringProp name="Authorization.username">noga</stringProp>
                        <stringProp name="Authorization.password">Nb123^^7</stringProp>
                        <stringProp name="Authorization.domain"></stringProp>
                        <stringProp name="Authorization.realm"></stringProp>
                      </elementProp>
                    </collectionProp>
                    <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
                  </AuthManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что в ответе статус услуги =&apos;DISCONNECTED&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">DISCONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>true</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>true</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>true</responseHeaders>
                  <requestHeaders>true</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <fileName>true</fileName>
                  <hostname>true</hostname>
                  <threadCounts>true</threadCounts>
                  <sampleCount>true</sampleCount>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>true</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>true</responseData>
                  <samplerData>true</samplerData>
                  <xml>true</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>true</responseHeaders>
                  <requestHeaders>true</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <fileName>true</fileName>
                  <hostname>true</hostname>
                  <threadCounts>true</threadCounts>
                  <sampleCount>true</sampleCount>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="FREE_TAX_COUNT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="connect_service" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключение FREE_TAX_COUNT " enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">true</boolProp>
              </TransactionController>
              <hashTree>
                <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Подключение услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;FREE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Подключение FREE_TAX_COUNT через connect_cap_service&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://tar.pages.tochka-tech.com/stepler](https://tar.pages.tochka-tech.com/stepler/modules/stepler.api.html#stepler.api.v3.connect_api.connect_service_by_account)\\n\\n---\\nНужен клиент подходящий под персональную бухгалтерию для УСН 6%\\nУ клиента должен быть открытый рублевый расчетный счет 40802810*\\nДолжно быть достаточно денег для подключение услуги (пополнить счёт можно через [https://stand-helper.bank24.int](https://stand-helper.bank24.int))&quot;);</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Sampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                  <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                  <stringProp name="query">select sc.customer_code from stepler_customer sc
inner join stepler_settlement ss on ss.customer_id  = sc.id
	where sc.id not in (select ssc.customer_id from stepler_serviceconnection ssc where ssc.status in (&apos;CONNECTED&apos;,&apos;CONNECTS&apos;))
				and sc.organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and sc.taxation_type_id  in 
				(select id 
					from stepler_taxationtype
					where name in 
					(&apos;УСН доходы 6%&apos; )
				) 
				and ss.is_closed = false 
		order by random() limit 1 </stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                  <stringProp name="queryType">Select Statement</stringProp>
                  <stringProp name="resultSetHandler">Store as String</stringProp>
                  <stringProp name="resultSetMaxRows"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="variableNames">customer_code</stringProp>
                </JDBCSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="parameters">start</stringProp>
                    <stringProp name="script"></stringProp>
                    <stringProp name="scriptLanguage">groovy</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверям статус подключения" enabled="true">
                    <stringProp name="JSON_PATH">$.result</stringProp>
                    <stringProp name="EXPECTED_VALUE"></stringProp>
                    <boolProp name="JSONVALIDATION">false</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Повторный запрос на подключение услуги FREE_TAX_COUNT" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;connect_cap_service&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;service_name&quot;: &quot;FREE_TAX_COUNT&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Message Assertion = &apos;У клиента ${customer_code} уже имеется активное подключение&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$..error.message</stringProp>
                    <stringProp name="EXPECTED_VALUE">[&quot;У клиента ${customer_code} уже имеется активное подключение FREE_TAX_COUNT&quot;]</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error code Assertion = &apos;CONNECTION_ALREADY_EXIST&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..code</stringProp>
                    <stringProp name="EXPECTED_VALUE">CONNECTION_ALREADY_EXIST</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Error message Assertion = &apos;У клиента ${customer_code} уже имеется активное подключение&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.error.data.errors..message</stringProp>
                    <stringProp name="EXPECTED_VALUE">[&quot;У клиента ${customer_code} уже имеется активное подключение FREE_TAX_COUNT&quot;]</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (active_connections_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v1/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">FREE_TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">2000</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг (get_active_connection_info)" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_active_connection_info&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
  }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Customer Assertion = &apos;${customer_code}&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.customer</stringProp>
                    <stringProp name="EXPECTED_VALUE">${customer_code}</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Service Assertion = &apos;TAX_COUNT&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.service</stringProp>
                    <stringProp name="EXPECTED_VALUE">FREE_TAX_COUNT</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">continue</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Отключаем клиенту услугу" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
    &quot;params&quot;: {&#xd;
        &quot;customer_code&quot;: &quot;${customer_code}&quot;&#xd;
    },&#xd;
    &quot;method&quot;: &quot;disconnect_service&quot;,&#xd;
    &quot;id&quot;: &quot;${__UUID()}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">https</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">api/v1/private/jsonrpc</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                    <collectionProp name="AuthManager.auth_list">
                      <elementProp name="" elementType="Authorization">
                        <stringProp name="Authorization.url"></stringProp>
                        <stringProp name="Authorization.username">noga</stringProp>
                        <stringProp name="Authorization.password">Nb123^^7</stringProp>
                        <stringProp name="Authorization.domain"></stringProp>
                        <stringProp name="Authorization.realm"></stringProp>
                      </elementProp>
                    </collectionProp>
                    <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
                  </AuthManager>
                  <hashTree/>
                  <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что в ответе статус услуги =&apos;DISCONNECTED&apos;" enabled="true">
                    <stringProp name="JSON_PATH">$.result.status</stringProp>
                    <stringProp name="EXPECTED_VALUE">DISCONNECTED</stringProp>
                    <boolProp name="JSONVALIDATION">true</boolProp>
                    <boolProp name="EXPECT_NULL">false</boolProp>
                    <boolProp name="INVERT">false</boolProp>
                    <boolProp name="ISREGEX">false</boolProp>
                  </JSONPathAssertion>
                  <hashTree/>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters">stop</stringProp>
                    <stringProp name="filename">${_allure_config_path}</stringProp>
                    <stringProp name="cacheKey">false</stringProp>
                    <stringProp name="script"></stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
