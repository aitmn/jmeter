<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Получение подключающихся услуг в 3 версии АПИ" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Активна FREE_TAX_COUNT + TAX_COUNT в процессе подключения" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента ктивна FREE_TAX_COUNT + TAX_COUNT в процессе подключения. Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с подключаемой услугой в БД" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query"> with st as (select  sc.customer_code, array_agg(c.status)as statuses
      from stepler_serviceconnection c
      right join stepler_customer sc on c.customer_id = sc.id 
      where sc.organization_type =&apos;INDIVIDUAL_ENTITY&apos;  
      	and c.service_id in
      			(select id 
                		from stepler_service ss 
                 	where name in (&apos;TAX_COUNT&apos;,
                 		&apos;FREE_TAX_COUNT&apos;)
                	)
          group by sc.customer_code)
select *
from st
where  (&apos;CONNECTED&apos; = any (statuses)) and  (&apos;CONNECTS&apos; = any (statuses))
order by random() limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">customer_code</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг " enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась подключаемая услуга  - TAX_COUNT" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось описание услуги - Персональная бухгалтерия" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE">Персональная бухгалтерия</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулся статус услуги - &apos;CONNECTS&apos;" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем заполнение фичей " enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1044357673">COUNT_TAXES</stringProp>
                  <stringProp name="-1263488346">TAX_DECLARATION</stringProp>
                  <stringProp name="-1695347989">TAX_CLAIMS</stringProp>
                  <stringProp name="71864003">KUDIR</stringProp>
                  <stringProp name="1177193256">NOTIFICATION_EMAIL</stringProp>
                  <stringProp name="-1804919247">SMS_NOTIFICATION</stringProp>
                  <stringProp name="-1962877961">SEND_REPORT_GOS</stringProp>
                  <stringProp name="1746654450">LETTER_FNS</stringProp>
                  <stringProp name="-607570632">ENVD_CARD</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключается TAX_COUNT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента подключается TAX_COUNT. Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с подключенной услугой в БД" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select ss.id, sc.customer_code, ss.date_begin, ss.date_end 
from stepler_serviceconnection ss  join stepler_customer sc on sc.id=ss.customer_id join stepler_service ss2 on ss.service_id =ss2.id 
where ss.status=&apos;CONNECTED&apos;
and ss2.code =&apos;9927&apos;
	order by   random() limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">connection_id, customer_code, date_begin, date_end</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключается&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTS&apos; 
	where  id = &apos;${connection_id_1}&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключаемых услуг" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась подключаемая услуга  - TAX_COUNT" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось описание услуги - Всё включено" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE">Всё включено</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулся статус услуги - &apos;CONNECTS&apos;" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем коды фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1746654450">LETTER_FNS</stringProp>
                  <stringProp name="1044357673">COUNT_TAXES</stringProp>
                  <stringProp name="-1263488346">TAX_DECLARATION</stringProp>
                  <stringProp name="-1695347989">TAX_CLAIMS</stringProp>
                  <stringProp name="71864003">KUDIR</stringProp>
                  <stringProp name="1776253730">STATEMENT_1C</stringProp>
                  <stringProp name="-1837188186">SVERKA</stringProp>
                  <stringProp name="-770674048">STATEMENT_USN</stringProp>
                  <stringProp name="1177193256">NOTIFICATION_EMAIL</stringProp>
                  <stringProp name="-1804919247">SMS_NOTIFICATION</stringProp>
                  <stringProp name="-1962877961">SEND_REPORT_GOS</stringProp>
                  <stringProp name="-1239373944">MARKETPLACES</stringProp>
                  <stringProp name="450270475">MONEYBOX</stringProp>
                  <stringProp name="-417699961">PATENT_CARD</stringProp>
                  <stringProp name="1585078872">STATEMENT_PATENT</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем название фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1924863900">Получение и отправка писем из налоговой</stringProp>
                  <stringProp name="332231611">Расчет налогов и взносов</stringProp>
                  <stringProp name="380065887">Формирование и отправка декларации</stringProp>
                  <stringProp name="1870157882">Получение и ознакомление с требованиями от налоговой</stringProp>
                  <stringProp name="-1883931759">Формирование КУДИР для скачивания в один клик</stringProp>
                  <stringProp name="590461326">Загрузка выписки из 1С</stringProp>
                  <stringProp name="-537277110">Запрос сверки из ФНС</stringProp>
                  <stringProp name="-159889147">Формирование и отправка заявление на УСН</stringProp>
                  <stringProp name="339955066">Напоминания об оплате налогов и взносов в email и telegram</stringProp>
                  <stringProp name="-1219293633">Напоминание об оплате налогов и взносов в смс</stringProp>
                  <stringProp name="-1090089736">Отправка отчета в госорганы</stringProp>
                  <stringProp name="-236075902">Добавление карточки ЕНВД</stringProp>
                  <stringProp name="-152179718">Работа с маркетплейсами</stringProp>
                  <stringProp name="555338763">Работа с копилкой</stringProp>
                  <stringProp name="1727798796">Добавление карточки патента и учет расчетов по патенту</stringProp>
                  <stringProp name="1202698941">Формирование и отправка заявления на патент</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключено&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTED&apos; 
	where  id = &apos;${connection_id_1}&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключается TAX_COUNT(архивная)" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента подключается TAX_COUNT(архивная). Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с подключенной услугой в БД" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select sc.customer_code, ss.date_begin, ss.date_end 
from stepler_serviceconnection ss  join stepler_customer sc on sc.id=ss.customer_id join stepler_service ss2 on ss.service_id =ss2.id 
where ss.status=&apos;CONNECTED&apos;
and ss2.code =&apos;9909&apos;
	order by   random() limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">customer_code, date_begin, date_end</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключается&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTS&apos; 
	where customer_id = (select id from stepler_customer where customer_code = &apos;${customer_code_1}&apos;)
	and date_begin =&apos;${date_begin_1}&apos; and service_id=(select id from stepler_service where code =&apos;9909&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключаемых услуг" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась подключаемая услуга  - TAX_COUNT" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE">TAX_COUNT</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось описание услуги - Персональная бухгалтерия" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE">Персональная бухгалтерия</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулся статус услуги - &apos;CONNECTS&apos;" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем коды фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1746654450">LETTER_FNS</stringProp>
                  <stringProp name="1044357673">COUNT_TAXES</stringProp>
                  <stringProp name="-1263488346">TAX_DECLARATION</stringProp>
                  <stringProp name="-1695347989">TAX_CLAIMS</stringProp>
                  <stringProp name="71864003">KUDIR</stringProp>
                  <stringProp name="1776253730">STATEMENT_1C</stringProp>
                  <stringProp name="-1837188186">SVERKA</stringProp>
                  <stringProp name="-770674048">STATEMENT_USN</stringProp>
                  <stringProp name="1177193256">NOTIFICATION_EMAIL</stringProp>
                  <stringProp name="-1804919247">SMS_NOTIFICATION</stringProp>
                  <stringProp name="-1962877961">SEND_REPORT_GOS</stringProp>
                  <stringProp name="-1239373944">MARKETPLACES</stringProp>
                  <stringProp name="450270475">MONEYBOX</stringProp>
                  <stringProp name="-417699961">PATENT_CARD</stringProp>
                  <stringProp name="1585078872">STATEMENT_PATENT</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем название фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1924863900">Получение и отправка писем из налоговой</stringProp>
                  <stringProp name="332231611">Расчет налогов и взносов</stringProp>
                  <stringProp name="380065887">Формирование и отправка декларации</stringProp>
                  <stringProp name="1870157882">Получение и ознакомление с требованиями от налоговой</stringProp>
                  <stringProp name="-1883931759">Формирование КУДИР для скачивания в один клик</stringProp>
                  <stringProp name="590461326">Загрузка выписки из 1С</stringProp>
                  <stringProp name="-537277110">Запрос сверки из ФНС</stringProp>
                  <stringProp name="-159889147">Формирование и отправка заявление на УСН</stringProp>
                  <stringProp name="339955066">Напоминания об оплате налогов и взносов в email и telegram</stringProp>
                  <stringProp name="-1219293633">Напоминание об оплате налогов и взносов в смс</stringProp>
                  <stringProp name="-1090089736">Отправка отчета в госорганы</stringProp>
                  <stringProp name="-236075902">Добавление карточки ЕНВД</stringProp>
                  <stringProp name="-152179718">Работа с маркетплейсами</stringProp>
                  <stringProp name="555338763">Работа с копилкой</stringProp>
                  <stringProp name="1727798796">Добавление карточки патента и учет расчетов по патенту</stringProp>
                  <stringProp name="1202698941">Формирование и отправка заявления на патент</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключено&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTED&apos; 
	where customer_id = (select id from stepler_customer where customer_code = &apos;${customer_code_1}&apos;)
	and date_begin =&apos;${date_begin_1}&apos; and service_id=(select id from stepler_service where code =&apos;9909&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключается TAX_COUNT для УСН Д-Р" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента подключается TAX_COUNT для УСН Д-Р. Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с подключаемой услугой в БД" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select   sc.customer_code, ss.date_begin, ss.date_end 
from stepler_serviceconnection ss  join stepler_customer sc on sc.id=ss.customer_id 
where status=&apos;CONNECTS&apos;
and service_id =(
	select id 
		from stepler_service 
	where code =&apos;9928&apos;
		order by   random() limit 1)
	order by   random() limit 1 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">customer_code, date_begin, date_end</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась подключаемая услуга  - TAX_COUNT_IN_EXP" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE">TAX_COUNT_IN_EXP</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось описание услуги - Бухподдержка на «Доходы - расходы»" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE">Бухподдержка на «Доходы - расходы»</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулся статус услуги - &apos;CONNECTS&apos;" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем коды фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1746654450">LETTER_FNS</stringProp>
                  <stringProp name="1044357673">COUNT_TAXES</stringProp>
                  <stringProp name="-1263488346">TAX_DECLARATION</stringProp>
                  <stringProp name="-1695347989">TAX_CLAIMS</stringProp>
                  <stringProp name="71864003">KUDIR</stringProp>
                  <stringProp name="1776253730">STATEMENT_1C</stringProp>
                  <stringProp name="-1837188186">SVERKA</stringProp>
                  <stringProp name="-770674048">STATEMENT_USN</stringProp>
                  <stringProp name="1177193256">NOTIFICATION_EMAIL</stringProp>
                  <stringProp name="-1804919247">SMS_NOTIFICATION</stringProp>
                  <stringProp name="-1962877961">SEND_REPORT_GOS</stringProp>
                  <stringProp name="-607570632">ENVD_CARD</stringProp>
                  <stringProp name="-417699961">PATENT_CARD</stringProp>
                  <stringProp name="1585078872">STATEMENT_PATENT</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключается TAX_COUNT_EMPLOYEE" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента подключается TAX_COUNT_EMPLOYEE. Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с подключаемой услугой в БД" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select   sc.customer_code, ss.date_begin, ss.date_end 
from stepler_serviceconnection ss  join stepler_customer sc on sc.id=ss.customer_id 
where status=&apos;CONNECTS&apos;
and service_id =(
	select id 
		from stepler_service 
	where name in (&apos;TAX_COUNT_EMPLOYEE&apos;)
		order by   random() limit 1)
	order by   random() limit 1 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">customer_code, date_begin, date_end</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась подключаемая услуга  - TAX_COUNT_EMPLOYEE" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE">TAX_COUNT_EMPLOYEE</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось описание услуги - Персональная с сотрудниками" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE">Персональная с сотрудниками</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулся статус услуги - &apos;CONNECTS&apos;" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем заполнение кода фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1746654450">LETTER_FNS</stringProp>
                  <stringProp name="1044357673">COUNT_TAXES</stringProp>
                  <stringProp name="-1263488346">TAX_DECLARATION</stringProp>
                  <stringProp name="-1695347989">TAX_CLAIMS</stringProp>
                  <stringProp name="71864003">KUDIR</stringProp>
                  <stringProp name="1776253730">STATEMENT_1C</stringProp>
                  <stringProp name="-1837188186">SVERKA</stringProp>
                  <stringProp name="-770674048">STATEMENT_USN</stringProp>
                  <stringProp name="1177193256">NOTIFICATION_EMAIL</stringProp>
                  <stringProp name="-1804919247">SMS_NOTIFICATION</stringProp>
                  <stringProp name="-1962877961">SEND_REPORT_GOS</stringProp>
                  <stringProp name="-607570632">ENVD_CARD</stringProp>
                  <stringProp name="-1239373944">MARKETPLACES</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем заполнение названия фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1924863900">Получение и отправка писем из налоговой</stringProp>
                  <stringProp name="332231611">Расчет налогов и взносов</stringProp>
                  <stringProp name="380065887">Формирование и отправка декларации</stringProp>
                  <stringProp name="1870157882">Получение и ознакомление с требованиями от налоговой</stringProp>
                  <stringProp name="-1883931759">Формирование КУДИР для скачивания в один клик</stringProp>
                  <stringProp name="590461326">Загрузка выписки из 1С</stringProp>
                  <stringProp name="-537277110">Запрос сверки из ФНС</stringProp>
                  <stringProp name="-159889147">Формирование и отправка заявление на УСН</stringProp>
                  <stringProp name="339955066">Напоминания об оплате налогов и взносов в email и telegram</stringProp>
                  <stringProp name="-1219293633">Напоминание об оплате налогов и взносов в смс</stringProp>
                  <stringProp name="-1090089736">Отправка отчета в госорганы</stringProp>
                  <stringProp name="-236075902">Добавление карточки ЕНВД</stringProp>
                  <stringProp name="-152179718">Работа с маркетплейсами</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключается REPORT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента подключается REPORT. Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с подключаемой услугой в БД" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select   sc.customer_code, ss.date_begin, ss.date_end 
from stepler_serviceconnection ss  join stepler_customer sc on sc.id=ss.customer_id 
where status=&apos;CONNECTS&apos;
and service_id =(
	select id 
		from stepler_service 
	where name in (&apos;REPORT&apos;)
		order by   random() limit 1)
	order by   random() limit 1 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">customer_code, date_begin, date_end</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась подключаемая услуга  - REPORT" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE">REPORT</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось описание услуги - Отчётность" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE">Отчётность</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулся статус услуги - &apos;CONNECTS&apos;" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем коды фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1746654450">LETTER_FNS</stringProp>
                  <stringProp name="-1695347989">TAX_CLAIMS</stringProp>
                  <stringProp name="-1837188186">SVERKA</stringProp>
                  <stringProp name="-1962877961">SEND_REPORT_GOS</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Не было услуг" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента не было услуг. Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента у которого не было услуг" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select sc.customer_code
from stepler_serviceconnection c
         right join stepler_customer sc on c.customer_id = sc.id
where c.id is null 
order by random() 
limit 1;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">customer_code, date_begin, date_end</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключенных услуг" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась верная активная услуга" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">true</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось верное описание услуги" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">true</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась верная дата начала услуги" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.date_begin</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">true</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась верная дата окончания услуги" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.date_end</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">false</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">true</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключается BUNDLE_PATENT_TAX_COUNT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента подключается BUNDLE_PATENT_TAX_COUNT. Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с подключенной услугой в БД" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select sc.customer_code, ss.date_begin, ss.date_end 
from stepler_serviceconnection ss  join stepler_customer sc on sc.id=ss.customer_id join stepler_service ss2 on ss.service_id =ss2.id 
where ss.status=&apos;CONNECTED&apos;
and ss2.code =&apos;9924&apos;
	order by   random() limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">customer_code, date_begin, date_end</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключается&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTS&apos; 
	where customer_id = (select id from stepler_customer where customer_code = &apos;${customer_code_1}&apos;)
	and date_begin =&apos;${date_begin_1}&apos; and service_id=(select id from stepler_service where code =&apos;9924&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключаемых услуг" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась подключаемая услуга  - BUNDLE_PATENT_TAX_COUNT" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE">BUNDLE_PATENT_TAX_COUNT</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось описание услуги - Бухподдержка на патенте" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE">Бухподдержка на патенте</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулся статус услуги - &apos;CONNECTS&apos;" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем заполнение кода фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1746654450">LETTER_FNS</stringProp>
                  <stringProp name="1044357673">COUNT_TAXES</stringProp>
                  <stringProp name="-1263488346">TAX_DECLARATION</stringProp>
                  <stringProp name="-1695347989">TAX_CLAIMS</stringProp>
                  <stringProp name="71864003">KUDIR</stringProp>
                  <stringProp name="1776253730">STATEMENT_1C</stringProp>
                  <stringProp name="-1837188186">SVERKA</stringProp>
                  <stringProp name="-770674048">STATEMENT_USN</stringProp>
                  <stringProp name="1177193256">NOTIFICATION_EMAIL</stringProp>
                  <stringProp name="-1804919247">SMS_NOTIFICATION</stringProp>
                  <stringProp name="-1962877961">SEND_REPORT_GOS</stringProp>
                  <stringProp name="-607570632">ENVD_CARD</stringProp>
                  <stringProp name="-417699961">PATENT_CARD</stringProp>
                  <stringProp name="1585078872">STATEMENT_PATENT</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем заполнение название фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1924863900">Получение и отправка писем из налоговой</stringProp>
                  <stringProp name="332231611">Расчет налогов и взносов</stringProp>
                  <stringProp name="380065887">Формирование и отправка декларации</stringProp>
                  <stringProp name="1870157882">Получение и ознакомление с требованиями от налоговой</stringProp>
                  <stringProp name="-1883931759">Формирование КУДИР для скачивания в один клик</stringProp>
                  <stringProp name="590461326">Загрузка выписки из 1С</stringProp>
                  <stringProp name="-537277110">Запрос сверки из ФНС</stringProp>
                  <stringProp name="-159889147">Формирование и отправка заявление на УСН</stringProp>
                  <stringProp name="339955066">Напоминания об оплате налогов и взносов в email и telegram</stringProp>
                  <stringProp name="-1219293633">Напоминание об оплате налогов и взносов в смс</stringProp>
                  <stringProp name="-1090089736">Отправка отчета в госорганы</stringProp>
                  <stringProp name="-236075902">Добавление карточки ЕНВД</stringProp>
                  <stringProp name="1727798796">Добавление карточки патента и учет расчетов по патенту</stringProp>
                  <stringProp name="1202698941">Формирование и отправка заявления на патент</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключено&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTED&apos; 
	where customer_id = (select id from stepler_customer where customer_code = &apos;${customer_code_1}&apos;)
	and date_begin =&apos;${date_begin_1}&apos; and service_id=(select id from stepler_service where code =&apos;9924&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключается BUNDLE_WB_TAX_COUNT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента подключается BUNDLE_WB_TAX_COUNT. Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с подключенной услугой в БД" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select sc.customer_code, ss.date_begin, ss.date_end 
from stepler_serviceconnection ss  join stepler_customer sc on sc.id=ss.customer_id join stepler_service ss2 on ss.service_id =ss2.id 
where ss.status=&apos;CONNECTED&apos;
and ss2.code =&apos;9925&apos;
	order by   random() limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">customer_code, date_begin, date_end</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключается&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTS&apos; 
	where customer_id = (select id from stepler_customer where customer_code = &apos;${customer_code_1}&apos;)
	and date_begin =&apos;${date_begin_1}&apos; and service_id=(select id from stepler_service where code =&apos;9925&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключаемых услуг" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась подключаемая услуга  - BUNDLE_WB_TAX_COUNT" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE">BUNDLE_WB_TAX_COUNT</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось описание услуги - Маркетплейсы на «Доходы»" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE">Маркетплейсы на «Доходы»</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулся статус услуги - &apos;CONNECTS&apos;" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем заполнение кода фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1746654450">LETTER_FNS</stringProp>
                  <stringProp name="1044357673">COUNT_TAXES</stringProp>
                  <stringProp name="-1263488346">TAX_DECLARATION</stringProp>
                  <stringProp name="-1695347989">TAX_CLAIMS</stringProp>
                  <stringProp name="71864003">KUDIR</stringProp>
                  <stringProp name="1776253730">STATEMENT_1C</stringProp>
                  <stringProp name="-1837188186">SVERKA</stringProp>
                  <stringProp name="-770674048">STATEMENT_USN</stringProp>
                  <stringProp name="1177193256">NOTIFICATION_EMAIL</stringProp>
                  <stringProp name="-1804919247">SMS_NOTIFICATION</stringProp>
                  <stringProp name="-1962877961">SEND_REPORT_GOS</stringProp>
                  <stringProp name="-607570632">ENVD_CARD</stringProp>
                  <stringProp name="-1239373944">MARKETPLACES</stringProp>
                  <stringProp name="450270475">MONEYBOX</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем заполнение название фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1924863900">Получение и отправка писем из налоговой</stringProp>
                  <stringProp name="332231611">Расчет налогов и взносов</stringProp>
                  <stringProp name="380065887">Формирование и отправка декларации</stringProp>
                  <stringProp name="1870157882">Получение и ознакомление с требованиями от налоговой</stringProp>
                  <stringProp name="-1883931759">Формирование КУДИР для скачивания в один клик</stringProp>
                  <stringProp name="590461326">Загрузка выписки из 1С</stringProp>
                  <stringProp name="-537277110">Запрос сверки из ФНС</stringProp>
                  <stringProp name="-159889147">Формирование и отправка заявление на УСН</stringProp>
                  <stringProp name="339955066">Напоминания об оплате налогов и взносов в email и telegram</stringProp>
                  <stringProp name="-1219293633">Напоминание об оплате налогов и взносов в смс</stringProp>
                  <stringProp name="-1090089736">Отправка отчета в госорганы</stringProp>
                  <stringProp name="-236075902">Добавление карточки ЕНВД</stringProp>
                  <stringProp name="-152179718">Работа с маркетплейсами</stringProp>
                  <stringProp name="555338763">Работа с копилкой</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключено&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTED&apos; 
	where customer_id = (select id from stepler_customer where customer_code = &apos;${customer_code_1}&apos;) 
	and date_begin =&apos;${date_begin_1}&apos; and service_id=(select id from stepler_service where code =&apos;9925&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Подключается BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Информация подключения услуги&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получение информации, о подключаемых услугах клиента&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;У клиента подключается BUNDLE_MONEYBOX_TAX_COUNT. Запрос через get_pending_connection&quot;);  
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);

/*
 * to create case report with single step
 * do not use parameters start/continue/stop
 * and do not create variable AllureCaseName
 */</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с подключенной услугой в БД" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="query">select sc.customer_code, ss.date_begin, ss.date_end 
from stepler_serviceconnection ss  join stepler_customer sc on sc.id=ss.customer_id join stepler_service ss2 on ss.service_id =ss2.id 
where ss.status=&apos;CONNECTED&apos;
and ss2.code =&apos;9926&apos;
	order by   random() limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames">customer_code, date_begin, date_end</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">start issues=[TAXDEV-450, TAXDEV-676]</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключается&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTS&apos; 
	where customer_id = (select id from stepler_customer where customer_code = &apos;${customer_code_1}&apos;)
	and date_begin =&apos;${date_begin_1}&apos; and service_id=(select id from stepler_service where code =&apos;9926&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на список подключаемых услуг" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_pending_connection&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code_1}&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v3/jsonrpc/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулась подключаемая услуга  - BUNDLE_MONEYBOX_TAX_COUNT" enabled="true">
                <stringProp name="JSON_PATH">$.result.service.name</stringProp>
                <stringProp name="EXPECTED_VALUE">BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулось описание услуги - &apos;Копилка на «Доходы»&apos; " enabled="true">
                <stringProp name="JSON_PATH">$.result.service.full_name</stringProp>
                <stringProp name="EXPECTED_VALUE">Копилка на «Доходы»</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем, что вернулся статус услуги - &apos;CONNECTS&apos;" enabled="true">
                <stringProp name="JSON_PATH">$.result.connection.status</stringProp>
                <stringProp name="EXPECTED_VALUE">CONNECTS</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем заполнение кода фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1746654450">LETTER_FNS</stringProp>
                  <stringProp name="1044357673">COUNT_TAXES</stringProp>
                  <stringProp name="-1263488346">TAX_DECLARATION</stringProp>
                  <stringProp name="-1695347989">TAX_CLAIMS</stringProp>
                  <stringProp name="71864003">KUDIR</stringProp>
                  <stringProp name="1776253730">STATEMENT_1C</stringProp>
                  <stringProp name="-1837188186">SVERKA</stringProp>
                  <stringProp name="-770674048">STATEMENT_USN</stringProp>
                  <stringProp name="1177193256">NOTIFICATION_EMAIL</stringProp>
                  <stringProp name="-1804919247">SMS_NOTIFICATION</stringProp>
                  <stringProp name="-1962877961">SEND_REPORT_GOS</stringProp>
                  <stringProp name="-607570632">ENVD_CARD</stringProp>
                  <stringProp name="450270475">MONEYBOX</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем заполнение название фичей" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1924863900">Получение и отправка писем из налоговой</stringProp>
                  <stringProp name="332231611">Расчет налогов и взносов</stringProp>
                  <stringProp name="380065887">Формирование и отправка декларации</stringProp>
                  <stringProp name="1870157882">Получение и ознакомление с требованиями от налоговой</stringProp>
                  <stringProp name="-1883931759">Формирование КУДИР для скачивания в один клик</stringProp>
                  <stringProp name="590461326">Загрузка выписки из 1С</stringProp>
                  <stringProp name="-537277110">Запрос сверки из ФНС</stringProp>
                  <stringProp name="-159889147">Формирование и отправка заявление на УСН</stringProp>
                  <stringProp name="339955066">Напоминания об оплате налогов и взносов в email и telegram</stringProp>
                  <stringProp name="-1219293633">Напоминание об оплате налогов и взносов в смс</stringProp>
                  <stringProp name="-1090089736">Отправка отчета в госорганы</stringProp>
                  <stringProp name="-236075902">Добавление карточки ЕНВД</stringProp>
                  <stringProp name="555338763">Работа с копилкой</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Обновляем статус услуги на &quot;Подключено&quot;" enabled="true">
              <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">update stepler_serviceconnection set status=&apos;CONNECTED&apos; 
	where customer_id = (select id from stepler_customer where customer_code = &apos;${customer_code_1}&apos;) 
	and date_begin =&apos;${date_begin_1}&apos; and service_id=(select id from stepler_service where code =&apos;9926&apos;)</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
