<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="services" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН Доходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг для на УСН Доходы через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы 6%&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;FREE_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступных услуг &apos;FREE_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;0&quot;,&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи&quot;,&quot;Подготовим декларацию для отправки онлайн&quot;,&quot;Напомним вам о всех налоговых событиях, чтобы вы ничего не пропустили&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Копилка на налоги и автоматическая уплата&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Подключайте Копилку: мы накопим в ней деньги с ваших доходов и уплатим налоги в срок&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Работа с Wildberries&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;FREE_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступных услуг &apos;FREE_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;0&quot;,&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи&quot;,&quot;Подготовим декларацию для отправки онлайн&quot;,&quot;Напомним вам о всех налоговых событиях, чтобы вы ничего не пропустили&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Копилка на налоги и автоматическая уплата&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Подключайте Копилку: мы накопим в ней деньги с ваших доходов и уплатим налоги в срок&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Работа с Wildberries&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН Доходы-расходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы-расходы через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на УСН Д-Р и с 403 тарифом" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">with st as (select sc.customer_code, array_agg (ss.tariff_code) as tariff_code
from stepler_customer sc join stepler_settlement ss  on sc.id =ss.customer_id 
where organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id  in 
	(select id 
		from stepler_taxationtype
		where name in 
		(&apos;УСН доходы - расходы&apos;)
	)
	and ss.state =&apos;REG&apos;  group by customer_code)
	
select *
from st
where  (&apos;403&apos; = any (tariff_code)) and not (&apos;405&apos; = any (tariff_code))
order by random() limit 1;
	</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;TAX_COUNT_IN_EXP&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;TAX_COUNT_IN_EXP&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;TAX_COUNT_IN_EXP&apos; = 3500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;3500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT_IN_EXP для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT_IN_EXP&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT_IN_EXP для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT_IN_EXP&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ЕНВД)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕНВД через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый налог на временный доход (ЕНВД)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;FREE_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступных услуг &apos;FREE_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;0&quot;,&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи&quot;,&quot;Подготовим декларацию для отправки онлайн&quot;,&quot;Напомним вам о всех налоговых событиях, чтобы вы ничего не пропустили&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Копилка на налоги и автоматическая уплата&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Подключайте Копилку: мы накопим в ней деньги с ваших доходов и уплатим налоги в срок&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Работа с Wildberries&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (Патент)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Патенте через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Патент&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;FREE_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступных услуг &apos;FREE_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;0&quot;,&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи&quot;,&quot;Подготовим декларацию для отправки онлайн&quot;,&quot;Напомним вам о всех налоговых событиях, чтобы вы ничего не пропустили&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по FREE_TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;FREE_TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Копилка на налоги и автоматическая уплата&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Подключайте Копилку: мы накопим в ней деньги с ваших доходов и уплатим налоги в срок&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;TAX_COUNT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Работа с Wildberries&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ОСНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ОСНО через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Общая система налогообложения (ОСНО, ОСН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (Неизвестная СНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Неизв. СНО через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Неизвестный СНО&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ЕСХН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕСХН через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="get_available_services" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН Доходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы 6%&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;BUNDLE_BASE_TAX_COUNT&quot;,&quot;BUNDLE_PATENT_TAX_COUNT&quot;,&quot;BUNDLE_WB_TAX_COUNT&quot;,&quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость услуги TAX_COUNT = 9900.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Копилка на налоги и автоматическая уплата&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Подключайте Копилку: мы накопим в ней деньги с ваших доходов и уплатим налоги в срок&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Работа с Wildberries&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;BUNDLE_BASE_TAX_COUNT&quot;,&quot;BUNDLE_PATENT_TAX_COUNT&quot;,&quot;BUNDLE_WB_TAX_COUNT&quot;,&quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость услуги TAX_COUNT = 9900.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Копилка на налоги и автоматическая уплата&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Подключайте Копилку: мы накопим в ней деньги с ваших доходов и уплатим налоги в срок&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Работа с Wildberries&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН Доходы-расходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы-расходы через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на УСН Д-Р и с 403 тарифом" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">with st as (select sc.customer_code, array_agg (ss.tariff_code) as tariff_code
from stepler_customer sc join stepler_settlement ss  on sc.id =ss.customer_id 
where organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id  in 
	(select id 
		from stepler_taxationtype
		where name in 
		(&apos;УСН доходы - расходы&apos;)
	)
	and ss.state =&apos;REG&apos;  group by customer_code)
	
select *
from st
where  (&apos;403&apos; = any (tariff_code)) and not (&apos;405&apos; = any (tariff_code))
order by random() limit 1;
	</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;TAX_COUNT_IN_EXP&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;TAX_COUNT_IN_EXP&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;TAX_COUNT_IN_EXP&apos; = 3500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT_IN_EXP&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;3500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT_IN_EXP для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT_IN_EXP&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT_IN_EXP для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT_IN_EXP&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT_IN_EXP для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT_IN_EXP&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ЕНВД)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕНВД через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый налог на временный доход (ЕНВД)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;BUNDLE_BASE_TAX_COUNT&quot;,&quot;BUNDLE_PATENT_TAX_COUNT&quot;,&quot;BUNDLE_WB_TAX_COUNT&quot;,&quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Копилка на налоги и автоматическая уплата&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость услуги TAX_COUNT = 9900.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Подключайте Копилку: мы накопим в ней деньги с ваших доходов и уплатим налоги в срок&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Работа с Wildberries&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (Патент)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Патенте через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Патент&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;BUNDLE_BASE_TAX_COUNT&quot;,&quot;BUNDLE_PATENT_TAX_COUNT&quot;,&quot;BUNDLE_WB_TAX_COUNT&quot;,&quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость услуги TAX_COUNT = 9900.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Расчёт налогов и взносов (учёт валюты)&quot;,&quot;Оптимизация налогов за счёт уплаты взносов&quot;,&quot;Подготовка отчётности&quot;,&quot;Редактирование и добавление операций вручную&quot;,&quot;Загрузка выписки из другого банка в формате 1С&quot;,&quot;Консультация бухгалтера&quot;,&quot;Восстановление налогового учёта&quot;,&quot;Копилка на налоги и автоматическая уплата&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;,&quot;Получение и ведение патента&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Мы рассчитаем налоги и взносы, подготовим платежи, сформируем декларацию и напомним обо всех сроках&quot;,&quot;Учтём ваши доходы в валюте в соответствии с законодательством&quot;,&quot;Опытные бухгалтеры ответят на ваши вопросы и помогут во всем разобраться&quot;,&quot;Подключайте Копилку: мы накопим в ней деньги с ваших доходов и уплатим налоги в срок&quot;,&quot;Заполняйте заявления на патент и ведите его с нами&quot;,&quot;Сверяйтесь с налоговой вместе с сервисом «Сверка»&quot;,&quot;Отправляйте документы в налоговую прямо из бухгалтерии&quot;,&quot;Загружайте выписки из другого банка в формате 1С или добавляйте операции вручную&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по TAX_COUNT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Работа с Wildberries&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ОСНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ОСНО через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Общая система налогообложения (ОСНО, ОСН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (Неизвестная СНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Неизв. СНО через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Неизвестный СНО&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ЕСХН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕСХН через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН Доходы) с активной FREE_TAX_COUNT" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы через get_available_services при активной FREE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с активной FREE_TAX_COUNT в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer sc join stepler_serviceconnection ssc on sc.id=ssc.customer_id 
	where ssc.status=&apos;CONNECTED&apos;  and ssc.service_id in (select id from stepler_service ss where name=&apos;FREE_TAX_COUNT&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы 6%&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;BUNDLE_PATENT_TAX_COUNT&quot;,&quot;BUNDLE_WB_TAX_COUNT&quot;,&quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН) с активной FREE_TAX_COUNT" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН через get_available_services при активной FREE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer sc join stepler_serviceconnection ssc on sc.id=ssc.customer_id 
	where ssc.status=&apos;CONNECTED&apos;  and ssc.service_id in (select id from stepler_service ss where name=&apos;FREE_TAX_COUNT&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;BUNDLE_BASE_TAX_COUNTBUNDLE_PATENT_TAX_COUNT//BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;BUNDLE_PATENT_TAX_COUNT&quot;,&quot;BUNDLE_WB_TAX_COUNT&quot;,&quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ЕНВД) с активной FREE_TAX_COUNT" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕНВД через get_available_services при активной FREE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer sc join stepler_serviceconnection ssc on sc.id=ssc.customer_id 
	where ssc.status=&apos;CONNECTED&apos;  and ssc.service_id in (select id from stepler_service ss where name=&apos;FREE_TAX_COUNT&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый налог на временный доход (ЕНВД)&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;BUNDLE_PATENT_TAX_COUNT&quot;,&quot;BUNDLE_WB_TAX_COUNT&quot;,&quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (Патент) с активной FREE_TAX_COUNT" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Патенте через get_available_services при активной FREE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer sc join stepler_serviceconnection ssc on sc.id=ssc.customer_id 
	where ssc.status=&apos;CONNECTED&apos;  and ssc.service_id in (select id from stepler_service ss where name=&apos;FREE_TAX_COUNT&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Патент&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;BUNDLE_PATENT_TAX_COUNT&quot;,&quot;BUNDLE_WB_TAX_COUNT&quot;,&quot;BUNDLE_MONEYBOX_TAX_COUNT&quot;,&quot;TAX_COUNT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="get_helper_available_services" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН Доходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы 6%&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT/TAX_COUNT_EMPLOYEE/REPORT&apos;" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1881192140">REPORT</stringProp>
                    <stringProp name="603754290">TAX_COUNT_EMPLOYEE</stringProp>
                    <stringProp name="-608769221">TAX_COUNT</stringProp>
                    <stringProp name="-1576507420">BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                    <stringProp name="1555388260">BUNDLE_WB_TAX_COUNT</stringProp>
                    <stringProp name="-1942111423">BUNDLE_PATENT_TAX_COUNT</stringProp>
                    <stringProp name="229099690">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <stringProp name="-535110360">FREE_TAX_COUNT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость услуги TAX_COUNT = 9900.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT/TAX_COUNT_EMPLOYEE/REPORT&apos;" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1881192140">REPORT</stringProp>
                    <stringProp name="603754290">TAX_COUNT_EMPLOYEE</stringProp>
                    <stringProp name="-608769221">TAX_COUNT</stringProp>
                    <stringProp name="-1576507420">BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                    <stringProp name="1555388260">BUNDLE_WB_TAX_COUNT</stringProp>
                    <stringProp name="-1942111423">BUNDLE_PATENT_TAX_COUNT</stringProp>
                    <stringProp name="229099690">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <stringProp name="-535110360">FREE_TAX_COUNT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость услуги TAX_COUNT = 9900.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН Доходы-расходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы-расходы через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем ИП на УСН Д-Р и с 403 тарифом" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">with st as (select sc.customer_code, array_agg (ss.tariff_code) as tariff_code
from stepler_customer sc join stepler_settlement ss  on sc.id =ss.customer_id 
where organization_type=&apos;INDIVIDUAL_ENTITY&apos; and taxation_type_id  in 
	(select id 
		from stepler_taxationtype
		where name in 
		(&apos;УСН доходы - расходы&apos;)
	)
	and ss.state =&apos;REG&apos;  group by customer_code)
	
select *
from st
where  (&apos;403&apos; = any (tariff_code)) and not (&apos;405&apos; = any (tariff_code))
order by random() limit 1;
	</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг - TAX_COUNT_IN_EXP/ REPORT" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;TAX_COUNT_IN_EXP&quot;,&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;TAX_COUNT_IN_EXP&apos; = 3500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT_IN_EXP&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;3500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ЕНВД)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕНВД через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый налог на временный доход (ЕНВД)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT/TAX_COUNT_EMPLOYEE/REPORT&apos;" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1881192140">REPORT</stringProp>
                    <stringProp name="-608769221">TAX_COUNT</stringProp>
                    <stringProp name="-1576507420">BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                    <stringProp name="1555388260">BUNDLE_WB_TAX_COUNT</stringProp>
                    <stringProp name="-1942111423">BUNDLE_PATENT_TAX_COUNT</stringProp>
                    <stringProp name="229099690">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <stringProp name="-535110360">FREE_TAX_COUNT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость услуги TAX_COUNT = 9900.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (Патент)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Патенте через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Патент&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT/TAX_COUNT_EMPLOYEE/REPORT&apos;" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1881192140">REPORT</stringProp>
                    <stringProp name="-608769221">TAX_COUNT</stringProp>
                    <stringProp name="-1576507420">BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                    <stringProp name="1555388260">BUNDLE_WB_TAX_COUNT</stringProp>
                    <stringProp name="-1942111423">BUNDLE_PATENT_TAX_COUNT</stringProp>
                    <stringProp name="229099690">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <stringProp name="-535110360">FREE_TAX_COUNT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость услуги TAX_COUNT = 9900.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;TAX_COUNT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;9900.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ОСНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ОСНО через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Общая система налогообложения (ОСНО, ОСН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (Неизвестная СНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Неизв. СНО через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Неизвестный СНО&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ЕСХН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕСХН через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН Доходы) с активной FREE_TAX_COUNT" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы через get_helper_available_services при активной FREE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента с активной FREE_TAX_COUNT в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer sc join stepler_serviceconnection ssc on sc.id=ssc.customer_id 
	where ssc.status=&apos;CONNECTED&apos;  and ssc.service_id in (select id from stepler_service ss where name=&apos;FREE_TAX_COUNT&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы 6%&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT/TAX_COUNT_EMPLOYEE/REPORT&apos;" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1881192140">REPORT</stringProp>
                    <stringProp name="603754290">TAX_COUNT_EMPLOYEE</stringProp>
                    <stringProp name="-608769221">TAX_COUNT</stringProp>
                    <stringProp name="-1576507420">BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                    <stringProp name="1555388260">BUNDLE_WB_TAX_COUNT</stringProp>
                    <stringProp name="-1942111423">BUNDLE_PATENT_TAX_COUNT</stringProp>
                    <stringProp name="229099690">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <stringProp name="-535110360">FREE_TAX_COUNT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (УСН) с активной FREE_TAX_COUNT" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН через get_helper_available_services при активной FREE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer sc join stepler_serviceconnection ssc on sc.id=ssc.customer_id 
	where ssc.status=&apos;CONNECTED&apos;  and ssc.service_id in (select id from stepler_service ss where name=&apos;FREE_TAX_COUNT&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT/TAX_COUNT_EMPLOYEE/REPORT&apos;" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1881192140">REPORT</stringProp>
                    <stringProp name="603754290">TAX_COUNT_EMPLOYEE</stringProp>
                    <stringProp name="-608769221">TAX_COUNT</stringProp>
                    <stringProp name="-1576507420">BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                    <stringProp name="1555388260">BUNDLE_WB_TAX_COUNT</stringProp>
                    <stringProp name="-1942111423">BUNDLE_PATENT_TAX_COUNT</stringProp>
                    <stringProp name="229099690">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <stringProp name="-535110360">FREE_TAX_COUNT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (ЕНВД) с активной FREE_TAX_COUNT" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕНВД get_helper_available_services при активной FREE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer sc join stepler_serviceconnection ssc on sc.id=ssc.customer_id 
	where ssc.status=&apos;CONNECTED&apos;  and ssc.service_id in (select id from stepler_service ss where name=&apos;FREE_TAX_COUNT&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый налог на временный доход (ЕНВД)&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT/TAX_COUNT_EMPLOYEE/REPORT&apos;" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1881192140">REPORT</stringProp>
                    <stringProp name="-608769221">TAX_COUNT</stringProp>
                    <stringProp name="-1576507420">BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                    <stringProp name="1555388260">BUNDLE_WB_TAX_COUNT</stringProp>
                    <stringProp name="-1942111423">BUNDLE_PATENT_TAX_COUNT</stringProp>
                    <stringProp name="229099690">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <stringProp name="-535110360">FREE_TAX_COUNT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ИП (Патент) с активной FREE_TAX_COUNT" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ИП&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Патенте через get_helper_available_services при активной FREE_TAX_COUNT&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer sc join stepler_serviceconnection ssc on sc.id=ssc.customer_id 
	where ssc.status=&apos;CONNECTED&apos;  and ssc.service_id in (select id from stepler_service ss where name=&apos;FREE_TAX_COUNT&apos;)
				and organization_type = &apos;INDIVIDUAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Патент&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем наличие доступных услуг &apos;FREE_TAX_COUNT/BUNDLE_BASE_TAX_COUNT/BUNDLE_WB_TAX_COUNT/BUNDLE_MONEYBOX_TAX_COUNT/TAX_COUNT/TAX_COUNT_EMPLOYEE/REPORT&apos;" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1881192140">REPORT</stringProp>
                    <stringProp name="-608769221">TAX_COUNT</stringProp>
                    <stringProp name="-1576507420">BUNDLE_MONEYBOX_TAX_COUNT</stringProp>
                    <stringProp name="1555388260">BUNDLE_WB_TAX_COUNT</stringProp>
                    <stringProp name="-1942111423">BUNDLE_PATENT_TAX_COUNT</stringProp>
                    <stringProp name="229099690">BUNDLE_BASE_TAX_COUNT</stringProp>
                    <stringProp name="-535110360">FREE_TAX_COUNT</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="services" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (УСН Доходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) 
	and organization_type=&apos;LEGAL_ENTITY&apos;
	and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы 6%&apos;)
	and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (УСН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) 
	and organization_type=&apos;LEGAL_ENTITY&apos;
	and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН&apos;)
	and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (Доходы-расходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы-расходы через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) 
	and organization_type=&apos;LEGAL_ENTITY&apos;
	and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы - расходы&apos;)
	and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (ЕНВД)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕНВД через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) 
	and organization_type=&apos;LEGAL_ENTITY&apos;
	and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый налог на временный доход (ЕНВД)&apos;)
	and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (Патент)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Патенте через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) 
	and organization_type=&apos;LEGAL_ENTITY&apos;
	and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Патент&apos;)
	and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (ОСНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ОСНО через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) 
	and organization_type=&apos;LEGAL_ENTITY&apos;
	and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Общая система налогообложения (ОСНО, ОСН)&apos;)
	and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных услуг &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (Неизвестная СНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Неизв. СНО через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) 
	and organization_type=&apos;LEGAL_ENTITY&apos;
	and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Неизвестный СНО&apos;)
	and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (ЕСХН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕСХН через services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;) 
	and organization_type=&apos;LEGAL_ENTITY&apos;
	and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;)
	and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 
</stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;with_features&quot;: true&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v2/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[*].price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для всех платформ" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.available_services.[?(@.name == &apos;REPORT&apos;)].service_features..[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="get_available_services" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (УСН Доходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы 6%&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (УСН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (УСН Доходы-расходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы-расходы через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы - расходы&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (ЕНВД)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕНВД через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый налог на временный доход (ЕНВД)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (Патент)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Патенте через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Патент&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (ОСНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ОСНО через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Общая система налогообложения (ОСНО, ОСН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (Неизвестная СНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Неизв. СНО через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Неизвестный СНО&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (ЕСХН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕСХН через get_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT на всех платформах" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ANYWHERE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;Электронная отправка отчётов в ФНС, ПФР, ФСС, РОССТАТ&quot;,&quot;Электронная переписка с налоговой&quot;,&quot;Сверки с налоговой об отсутствии долгов&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для веба" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_WEB&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступных фич по REPORT для мобилки" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].features[*].[?(@.visible_area == &apos;ONLY_MOBILE&apos;)].name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="get_helper_available_services" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (УСН Доходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы 6%&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (УСН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (УСН Доходы-расходы)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на УСН Доходы-расходы через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;УСН доходы - расходы&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (ЕНВД)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕНВД через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый налог на временный доход (ЕНВД)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (Патент)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Патенте через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Патент&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (ОСНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ОСНО через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Общая система налогообложения (ОСНО, ОСН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (Неизвестная СНО)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на Неизв. СНО через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Неизвестный СНО&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ООО (ЕСХН)" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Получение списка доступных услуг&quot;);
vars.put(&quot;AllureStory&quot;,&quot;ООО&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получение доступных услуг на ЕСХН через get_helper_available_services&quot;);
vars.put(&quot;AllureCaseDescription&quot;,&quot;Ссылка на документацию: [https://confluence.bank24.int](https://confluence.bank24.int/pages/viewpage.action?pageId=156420926)\\n\\n---\\nСистемы налогообложения\\n- 1 - ЕСХН\\n- 2 - УСН\\n- 3 - ОСНО\\n- 4 - ЕНВД\\n- 5 - Патент\\n- 6 - УСН доходы\\n- 7 - УСН доходы-расходы\\n- 8 - Неизвестная СНО\\n- 9 - Налог на профессиональный доход\\nМенять систему налогобложения можно через терминальный колвир: MLCIEN -&gt; Доп.информация -&gt; Система налогообложения -&gt; Редактировать -&gt; Сохранить)&quot;);</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Sampler>
              <hashTree/>
              <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Ищем клиента без подключенной услуги в БД" enabled="true">
                <stringProp name="dataSource">STEPLER_${__P(layer)}</stringProp>
                <stringProp name="query">select customer_code from stepler_customer 
	where id not in (select customer_id from stepler_serviceconnection where status=&apos;CONNECTED&apos;)
				and organization_type = &apos;LEGAL_ENTITY&apos; 
				and taxation_type_id in (select id from stepler_taxationtype st where name =&apos;Единый сельскохозяйственный налог (ЕСХН)&apos;)
				and created &gt;= TO_TIMESTAMP(&apos;${__timeShift(yyyy-MM-dd,,-P60D,yesterday)}&apos;, &apos;YYYY/MM/DD&apos;)
		and customer_code not in (&apos;302711141&apos;)
		order by random() limit 1 </stringProp>
                <stringProp name="queryArguments"></stringProp>
                <stringProp name="queryArgumentsTypes"></stringProp>
                <stringProp name="queryTimeout"></stringProp>
                <stringProp name="queryType">Select Statement</stringProp>
                <stringProp name="resultSetHandler">Store as String</stringProp>
                <stringProp name="resultSetMaxRows"></stringProp>
                <stringProp name="resultVariable"></stringProp>
                <stringProp name="variableNames">customer_code</stringProp>
              </JDBCSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменную без постфикса" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&apos;customer_code_1&apos;])</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">start issues=[TAXDEV-450]</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Запрос на доступные услуги" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;get_helper_available_services&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot; &#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/v3/private/jsonrpc/</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем наличие доступной услуги &apos;REPORT&apos;" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.name</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;REPORT&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем стоимость доступной услуги &apos;REPORT&apos; = 2500.00" enabled="true">
                  <stringProp name="JSON_PATH">.result.[*].service.[?(@.name == &apos;REPORT&apos;)].full_price</stringProp>
                  <stringProp name="EXPECTED_VALUE">[&quot;2500.00&quot;]</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                  <boolProp name="EXPECT_NULL">false</boolProp>
                  <boolProp name="INVERT">false</boolProp>
                  <boolProp name="ISREGEX">false</boolProp>
                </JSONPathAssertion>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">${STEPLER_BASIC_ADMIN}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                  <stringProp name="cacheKey">false</stringProp>
                  <stringProp name="filename">${_allure_config_path}</stringProp>
                  <stringProp name="parameters">stop</stringProp>
                  <stringProp name="script"></stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
