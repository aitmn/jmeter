<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Test Fragment" enabled="false"/>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Получить данные для нового патента" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получаем данные по уплате налога для нового патента на год" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Патент&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получить данные по уплате налога для патента в Точке X&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получить данные по уплате налога для нового патента на год&quot;);  
vars.put(&quot;AllureCaseDescription&quot;, &quot;Патент от месяца до полугода оплачиваентся одним платежом: срок уплаты – последний день действия патента. Патент на срок от полугода до года оплачивайте двумя платежами - 1/3 в течение 90 календарных дней после начала действия патента и 2/3 в течение срока действия патента&quot;);
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Находим активного клиента без патента" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">select oc.customer_code 
	from orders_company oc left join patent_patent pp on oc.id = pp.company_id 
		where oc.closing_date is null 
		and oc.is_active is true 
		and oc.tax_regime_id =&apos;2&apos; 
		and pp.company_id is null
order by random() limit 1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">customer_code</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные без постфикса" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&quot;customer_code_1&quot;])</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">start [TAXDEV-611]</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Получаем данные по уплате налога для нового патента на год" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_calculation_info&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;number&quot;: &quot;${__Random(1,9999,patent_number)}&quot;,&#xd;
    &quot;tax_base&quot;: &quot;${__Random(10000,100000,tax_base)}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-01-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-12-31&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем сумму налога по патенту" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">tax_payment;tax_payment_first;tax_payment_second</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.tax_payment;$.result.tax_payment_first;$.result.tax_payment_second</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;0;0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму налога к уплате - налоговая база * 0.06" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment = Float.parseFloat(vars[&apos;tax_payment&apos;]) 
int sum_tax = Math.round(tax_base * 0.06)

if ( sum_tax == tax_payment ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному: sum_tax&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму первой части налога к уплате - налоговая база * 0.06 * 1/3" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment_first = Float.parseFloat(vars[&apos;tax_payment_first&apos;]) 
int payment_first =  Math.round((tax_base * 0.06)/3)

if ( payment_first == tax_payment_first ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму второй части налога к уплате- налоговая база * 0.06 * 2/3" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment_second = Float.parseFloat(vars[&apos;tax_payment_second&apos;]) 
int payment_first =  Math.round((tax_base * 0.06)/3)
int payment_second =  Math.round((tax_base * 0.06)-payment_first)

if ( payment_second == tax_payment_second ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты второй части  патента не соответствует рассчитанному&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты налога - ${__time(yyyy,)}-12-31" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-12-31</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты первой части налога - ${__time(yyyy,)}-03-31" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date_first</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-03-31</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получаем данные по уплате налога для нового патента на полгода" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Патент&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получить данные по уплате налога для патента в Точке X&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получить данные по уплате налога для нового патента на полгода&quot;);  
vars.put(&quot;AllureCaseDescription&quot;, &quot;Патент от месяца до полугода оплачиваентся одним платежом: срок уплаты – последний день действия патента. Патент на срок от полугода до года оплачивайте двумя платежами - 1/3 в течение 90 календарных дней после начала действия патента и 2/3 в течение срока действия патента&quot;);
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Находим активного клиента без патента" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">select oc.customer_code 
	from orders_company oc left join patent_patent pp on oc.id = pp.company_id 
		where oc.closing_date is null 
		and oc.is_active is true 
		and oc.tax_regime_id =&apos;2&apos; 
		and pp.company_id is null
order by random() limit 1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">customer_code</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные без постфикса" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&quot;customer_code_1&quot;])</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">start [TAXDEV-611]</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Получаем данные по уплате налога для нового патента на полгода" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_calculation_info&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;number&quot;: &quot;${__Random(1,9999,patent_number)}&quot;,&#xd;
    &quot;tax_base&quot;: &quot;${__Random(10000,100000,tax_base)}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-07-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-12-31&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем сумму налога по патенту" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">tax_payment;tax_payment_first;tax_payment_second</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.tax_payment;$.result.tax_payment_first;$.result.tax_payment_second</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;0;0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму налога к уплате - (tax_base/365)*184* 0.06" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment = Float.parseFloat(vars[&apos;tax_payment&apos;]) 
int sum_tax = Math.round((tax_base/365)*184* 0.06)

if ( sum_tax == tax_payment ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному: sum_tax&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму первой части налога к уплате - ((tax_base/365)*184* 0.06)* 1/3" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment_first = Float.parseFloat(vars[&apos;tax_payment_first&apos;]) 
int payment_first =  Math.round(((tax_base/365)*184* 0.06)/3)

if ( payment_first == tax_payment_first ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму второй части налога к уплате- налоговая база * 0.06 * 2/3" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment_first = Float.parseFloat(vars[&apos;tax_payment_first&apos;]) 
int tax_payment = Math.round((tax_base/365)*184* 0.06)
int tax_payment_second = Float.parseFloat(vars[&apos;tax_payment_second&apos;]) 
int payment_first =  Math.round(tax_payment/3)
int payment_second = tax_payment-payment_first

if ( payment_second == tax_payment_second ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты второй части  патента не соответствует рассчитанному: ${tax_payment}-${payment_first} = ${payment_second}&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты налога - ${__time(yyyy,)}-12-31" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-12-31</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты первой части налога - ${__time(yyyy,)}-09-28" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date_first</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-09-28</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получаем данные по уплате налога для нового патента на месяц в 30 дней" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Патент&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получить данные по уплате налога для патента в Точке X&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получаем данные по уплате налога для нового патента на месяц в 30 дней&quot;);  
vars.put(&quot;AllureCaseDescription&quot;, &quot;Патент от месяца до полугода оплачиваентся одним платежом: срок уплаты – последний день действия патента. Патент на срок от полугода до года оплачивайте двумя платежами - 1/3 в течение 90 календарных дней после начала действия патента и 2/3 в течение срока действия патента&quot;);
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Находим активного клиента без патента" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">select oc.customer_code 
	from orders_company oc left join patent_patent pp on oc.id = pp.company_id 
		where oc.closing_date is null 
		and oc.is_active is true 
		and oc.tax_regime_id =&apos;2&apos; 
		and pp.company_id is null
order by random() limit 1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">customer_code</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные без постфикса" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&quot;customer_code_1&quot;])</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">start [TAXDEV-611]</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Получаем данные по уплате налога для нового патента на месяц" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_calculation_info&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;number&quot;: &quot;${__Random(1,9999,patent_number)}&quot;,&#xd;
    &quot;tax_base&quot;: &quot;${__Random(10000,100000,tax_base)}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-06-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-06-30&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем сумму налога по патенту" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">tax_payment</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.tax_payment</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму налога к уплате - (tax_base/365)*30* 0.06" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment = Float.parseFloat(vars[&apos;tax_payment&apos;]) 
int sum_tax = Math.round((tax_base/365)*30* 0.06)

if ( sum_tax == tax_payment ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному: sum_tax&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сумму первой части налога к уплате - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_first</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сумму второй части налога к уплате - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_second</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты налога - ${__time(yyyy,)}-06-30" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-06-30</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты первой части налога - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_second</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получаем данные по уплате налога для нового патента на месяц в 31 день" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Патент&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получить данные по уплате налога для патента в Точке X&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получаем данные по уплате налога для нового патента на месяц в 31 день&quot;);  
vars.put(&quot;AllureCaseDescription&quot;, &quot;Патент от месяца до полугода оплачиваентся одним платежом: срок уплаты – последний день действия патента. Патент на срок от полугода до года оплачивайте двумя платежами - 1/3 в течение 90 календарных дней после начала действия патента и 2/3 в течение срока действия патента&quot;);
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Находим активного клиента без патента" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">select oc.customer_code 
	from orders_company oc left join patent_patent pp on oc.id = pp.company_id 
		where oc.closing_date is null 
		and oc.is_active is true 
		and oc.tax_regime_id =&apos;2&apos; 
		and pp.company_id is null
order by random() limit 1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">customer_code</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные без постфикса" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&quot;customer_code_1&quot;])</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">start [TAXDEV-611]</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Получаем данные по уплате налога для нового патента на месяц" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_calculation_info&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;number&quot;: &quot;${__Random(1,9999,patent_number)}&quot;,&#xd;
    &quot;tax_base&quot;: &quot;${__Random(10000,100000,tax_base)}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-07-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-07-31&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем сумму налога по патенту" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">tax_payment</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.tax_payment</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму налога к уплате -(tax_base/365)*31* 0.06" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment = Float.parseFloat(vars[&apos;tax_payment&apos;]) 
int sum_tax = Math.round((tax_base/365)*31* 0.06)

if ( sum_tax == tax_payment ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному: sum_tax&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сумму первой части налога к уплате - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_first</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сумму второй части налога к уплате - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_second</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты налога - ${__time(yyyy,)}-07-31" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-07-31</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты первой части налога - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_second</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Получить данные для существующего патента" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получаем данные по уплате налога для существующего патента на год" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Патент&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получить данные по уплате налога для патента в Точке X&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получить данные по уплате налога для существующего патента на год&quot;);  
vars.put(&quot;AllureCaseDescription&quot;, &quot;Патент от месяца до полугода оплачиваентся одним платежом: срок уплаты – последний день действия патента. Патент на срок от полугода до года оплачивайте двумя платежами - 1/3 в течение 90 календарных дней после начала действия патента и 2/3 в течение срока действия патента&quot;);
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Находим активного клиента без патента" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">select oc.customer_code 
	from orders_company oc left join patent_patent pp on oc.id = pp.company_id 
		where oc.closing_date is null 
		and oc.is_active is true 
		and oc.tax_regime_id =&apos;2&apos; 
		and pp.company_id is null
order by random() limit 1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">customer_code</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные без постфикса" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&quot;customer_code_1&quot;])</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">start [TAXDEV-611]</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Добавляем клиенту патент" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_add&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;number&quot;: &quot;${__Random(1,9999,patent_number)}&quot;,&#xd;
    &quot;region_code&quot;:99,&#xd;
    &quot;tax_base&quot;: &quot;${__Random(10000,100000,tax_base)}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-01-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-12-31&quot;,&#xd;
    &quot;activity_kind_code&quot;:&quot;019901&quot;,&#xd;
    &quot;payment_status&quot;: &quot;not_paid&quot;, &#xd;
    &quot;address&quot;: &quot;127422, РОССИЯ, МОСКВА г, ДМИТРОВСКИЙ проезд, ДОМ 6 корп 1, кв 50&quot;,&#xd;
    &quot;oktmo&quot;: &quot;45346000&quot;,&#xd;
    &quot;tax_agency_code&quot;: &quot;9999&quot;,&#xd;
    &quot;kbk&quot;: &quot;18210504010021000110&quot;,&#xd;
    &quot;reduction&quot;: &quot;0&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">patent_add</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем , что получен ИД патента" enabled="true">
                <stringProp name="JSON_PATH">.result.patent_id</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">true</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем ИД патента" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">patent_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.result.patent_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Получаем данные по уплате налога для нового патента на год" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_calculation_info&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;patent_id&quot;:${patent_id},&#xd;
    &quot;number&quot;: &quot;${patent_number}&quot;,&#xd;
    &quot;tax_base&quot;: &quot;${tax_base}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-01-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-12-31&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем сумму налога по патенту" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">tax_payment;tax_payment_first;tax_payment_second</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.tax_payment;$.result.tax_payment_first;$.result.tax_payment_second</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;0;0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму налога к уплате - налоговая база * 0.06" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment = Float.parseFloat(vars[&apos;tax_payment&apos;]) 
int sum_tax = Math.round(tax_base * 0.06)

if ( sum_tax == tax_payment ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному: sum_tax&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму первой части налога к уплате - налоговая база * 0.06 * 1/3" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment_first = Float.parseFloat(vars[&apos;tax_payment_first&apos;]) 
int payment_first =  Math.round((tax_base * 0.06)/3)

if ( payment_first == tax_payment_first ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму второй части налога к уплате- налоговая база * 0.06 * 2/3" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment_second = Float.parseFloat(vars[&apos;tax_payment_second&apos;]) 
int payment_first =  Math.round((tax_base * 0.06)/3)
int payment_second =  Math.round((tax_base * 0.06)-payment_first)

if ( payment_second == tax_payment_second ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты второй части  патента не соответствует рассчитанному&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты налога - ${__time(yyyy,)}-12-31" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-12-31</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты первой части налога - ${__time(yyyy,)}-03-31" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date_first</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-03-31</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Удаляем патент из БД" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">delete from patent_patent  
where id=&apos;${patent_id}&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем что запись удалена" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получаем данные по уплате налога для существующего патента на полгода" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Патент&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получить данные по уплате налога для патента в Точке X&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получить данные по уплате налога для существующего патента на полгода&quot;);  
vars.put(&quot;AllureCaseDescription&quot;, &quot;Патент от месяца до полугода оплачиваентся одним платежом: срок уплаты – последний день действия патента. Патент на срок от полугода до года оплачивайте двумя платежами - 1/3 в течение 90 календарных дней после начала действия патента и 2/3 в течение срока действия патента&quot;);
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Находим активного клиента без патента" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">select oc.customer_code 
	from orders_company oc left join patent_patent pp on oc.id = pp.company_id 
		where oc.closing_date is null 
		and oc.is_active is true 
		and oc.tax_regime_id =&apos;2&apos; 
		and pp.company_id is null
order by random() limit 1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">customer_code</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные без постфикса" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&quot;customer_code_1&quot;])</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">start [TAXDEV-611]</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Добавляем клиенту патент" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_add&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;number&quot;: &quot;${__Random(1,9999,patent_number)}&quot;,&#xd;
    &quot;region_code&quot;:99,&#xd;
    &quot;tax_base&quot;: &quot;${__Random(10000,100000,tax_base)}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-07-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-12-31&quot;,&#xd;
    &quot;activity_kind_code&quot;:&quot;019901&quot;,&#xd;
    &quot;payment_status&quot;: &quot;not_paid&quot;, &#xd;
    &quot;address&quot;: &quot;127422, РОССИЯ, МОСКВА г, ДМИТРОВСКИЙ проезд, ДОМ 6 корп 1, кв 50&quot;,&#xd;
    &quot;oktmo&quot;: &quot;45346000&quot;,&#xd;
    &quot;tax_agency_code&quot;: &quot;9999&quot;,&#xd;
    &quot;kbk&quot;: &quot;18210504010021000110&quot;,&#xd;
    &quot;reduction&quot;: &quot;0&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">patent_add</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем , что получен ИД патента" enabled="true">
                <stringProp name="JSON_PATH">.result.patent_id</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">true</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем ИД патента" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">patent_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.result.patent_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Получаем данные по уплате налога для нового патента на год" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_calculation_info&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;patent_id&quot;:${patent_id},&#xd;
    &quot;number&quot;: &quot;${patent_number}&quot;,&#xd;
    &quot;tax_base&quot;: &quot;${tax_base}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-07-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-12-31&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем сумму налога по патенту" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">tax_payment;tax_payment_first;tax_payment_second</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.tax_payment;$.result.tax_payment_first;$.result.tax_payment_second</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0;0;0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму налога к уплате - (tax_base/365)*184* 0.06" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment = Float.parseFloat(vars[&apos;tax_payment&apos;]) 
int sum_tax = Math.round((tax_base/365)*184* 0.06)

if ( sum_tax == tax_payment ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному: sum_tax&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму первой части налога к уплате - ((tax_base/365)*184* 0.06)* 1/3" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment_first = Float.parseFloat(vars[&apos;tax_payment_first&apos;]) 
int payment_first =  Math.round(((tax_base/365)*184* 0.06)/3)

if ( payment_first == tax_payment_first ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму второй части налога к уплате- налоговая база * 0.06 * 2/3" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment_first = Float.parseFloat(vars[&apos;tax_payment_first&apos;]) 
int tax_payment = Math.round((tax_base/365)*184* 0.06)
int tax_payment_second = Float.parseFloat(vars[&apos;tax_payment_second&apos;]) 
int payment_first =  Math.round(tax_payment/3)
int payment_second = tax_payment-payment_first

if ( payment_second == tax_payment_second ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты второй части  патента не соответствует рассчитанному: ${tax_payment}-${payment_first} = ${payment_second}&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты налога - ${__time(yyyy,)}-12-31" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-12-31</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты первой части налога - ${__time(yyyy,)}-09-28" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date_first</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-09-28</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Удаляем патент из БД" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">delete from patent_patent  
where id=&apos;${patent_id}&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем что запись удалена" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получаем данные по уплате налога для существующего патента на месяц в 30 дней" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Патент&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получить данные по уплате налога для патента в Точке X&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получаем данные по уплате налога для существующего патента на месяц в 30 дней&quot;);  
vars.put(&quot;AllureCaseDescription&quot;, &quot;Патент от месяца до полугода оплачиваентся одним платежом: срок уплаты – последний день действия патента. Патент на срок от полугода до года оплачивайте двумя платежами - 1/3 в течение 90 календарных дней после начала действия патента и 2/3 в течение срока действия патента&quot;);
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Находим активного клиента без патента" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">select oc.customer_code 
	from orders_company oc left join patent_patent pp on oc.id = pp.company_id 
		where oc.closing_date is null 
		and oc.is_active is true 
		and oc.tax_regime_id =&apos;2&apos; 
		and pp.company_id is null
order by random() limit 1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">customer_code</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные без постфикса" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&quot;customer_code_1&quot;])</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">start [TAXDEV-611]</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Добавляем клиенту патент" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_add&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;number&quot;: &quot;${__Random(1,9999,patent_number)}&quot;,&#xd;
    &quot;region_code&quot;:99,&#xd;
    &quot;tax_base&quot;: &quot;${__Random(10000,100000,tax_base)}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-01-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-12-31&quot;,&#xd;
    &quot;activity_kind_code&quot;:&quot;019901&quot;,&#xd;
    &quot;payment_status&quot;: &quot;not_paid&quot;, &#xd;
    &quot;address&quot;: &quot;127422, РОССИЯ, МОСКВА г, ДМИТРОВСКИЙ проезд, ДОМ 6 корп 1, кв 50&quot;,&#xd;
    &quot;oktmo&quot;: &quot;45346000&quot;,&#xd;
    &quot;tax_agency_code&quot;: &quot;9999&quot;,&#xd;
    &quot;kbk&quot;: &quot;18210504010021000110&quot;,&#xd;
    &quot;reduction&quot;: &quot;0&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">patent_add</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем , что получен ИД патента" enabled="true">
                <stringProp name="JSON_PATH">.result.patent_id</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">true</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем ИД патента" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">patent_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.result.patent_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Получаем данные по уплате налога для нового патента на год" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_calculation_info&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;patent_id&quot;:${patent_id},&#xd;
    &quot;number&quot;: &quot;${patent_number}&quot;,&#xd;
    &quot;tax_base&quot;: &quot;${tax_base}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-06-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-06-30&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем сумму налога по патенту" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">tax_payment</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.tax_payment</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму налога к уплате - (tax_base/365)*30* 0.06" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment = Float.parseFloat(vars[&apos;tax_payment&apos;]) 
int sum_tax = Math.round((tax_base/365)*30* 0.06)

if ( sum_tax == tax_payment ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному: sum_tax&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сумму первой части налога к уплате - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_first</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сумму второй части налога к уплате - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_second</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты налога - ${__time(yyyy,)}-06-30" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-06-30</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты первой части налога - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_second</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Удаляем патент из БД" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">delete from patent_patent  
where id=&apos;${patent_id}&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем что запись удалена" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Получаем данные по уплате налога для существующего патента на месяц в 31 день" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Declare allure annotations" enabled="true">
              <stringProp name="cacheKey">false</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">vars.put(&quot;AllureFeature&quot;,&quot;Патент&quot;);
vars.put(&quot;AllureStory&quot;,&quot;Получить данные по уплате налога для патента в Точке X&quot;);
vars.put(&quot;AllureCaseName&quot;,&quot;Получаем данные по уплате налога для существующего патента на месяц в 31 день&quot;);  
vars.put(&quot;AllureCaseDescription&quot;, &quot;Патент от месяца до полугода оплачиваентся одним платежом: срок уплаты – последний день действия патента. Патент на срок от полугода до года оплачивайте двумя платежами - 1/3 в течение 90 календарных дней после начала действия патента и 2/3 в течение срока действия патента&quot;);
vars.put(&quot;AllureTestOwner&quot;,&quot;Нога Екатерина Владимировна&quot;);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223Sampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Находим активного клиента без патента" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">select oc.customer_code 
	from orders_company oc left join patent_patent pp on oc.id = pp.company_id 
		where oc.closing_date is null 
		and oc.is_active is true 
		and oc.tax_regime_id =&apos;2&apos; 
		and pp.company_id is null
order by random() limit 1;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">customer_code</stringProp>
            </JDBCSampler>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="Садим переменные без постфикса" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">vars.put(&quot;customer_code&quot;,vars[&quot;customer_code_1&quot;])</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">start [TAXDEV-611]</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Добавляем клиенту патент" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_add&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;number&quot;: &quot;${__Random(1,9999,patent_number)}&quot;,&#xd;
    &quot;region_code&quot;:99,&#xd;
    &quot;tax_base&quot;: &quot;${__Random(10000,100000,tax_base)}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-01-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-12-31&quot;,&#xd;
    &quot;activity_kind_code&quot;:&quot;019901&quot;,&#xd;
    &quot;payment_status&quot;: &quot;not_paid&quot;, &#xd;
    &quot;address&quot;: &quot;127422, РОССИЯ, МОСКВА г, ДМИТРОВСКИЙ проезд, ДОМ 6 корп 1, кв 50&quot;,&#xd;
    &quot;oktmo&quot;: &quot;45346000&quot;,&#xd;
    &quot;tax_agency_code&quot;: &quot;9999&quot;,&#xd;
    &quot;kbk&quot;: &quot;18210504010021000110&quot;,&#xd;
    &quot;reduction&quot;: &quot;0&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">patent_add</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем , что получен ИД патента" enabled="true">
                <stringProp name="JSON_PATH">.result.patent_id</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">true</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем ИД патента" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">patent_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">.result.patent_id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">continue</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Получаем данные по уплате налога для нового патента на год" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;jsonrpc&quot;: &quot;2.0&quot;,&#xd;
  &quot;method&quot;: &quot;patent_calculation_info&quot;,&#xd;
  &quot;id&quot;: &quot;${__UUID()}&quot;,&#xd;
  &quot;params&quot;: { &#xd;
    &quot;customer_code&quot;: &quot;${customer_code}&quot;,&#xd;
    &quot;patent_id&quot;:${patent_id},&#xd;
    &quot;number&quot;: &quot;${patent_number}&quot;,&#xd;
    &quot;tax_base&quot;: &quot;${tax_base}&quot;,&#xd;
    &quot;tax_rate&quot;: &quot;6&quot;,&#xd;
    &quot;start_date&quot;: &quot;${__time(yyyy,)}-07-01&quot;,&#xd;
    &quot;end_date&quot;: &quot;${__time(yyyy,)}-07-31&quot;&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">api/v5/jsonrpc</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.gui.JSONFormatterGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonformatter.JSONFormatter" testname="jp@gc - JSON Format Post Processor" enabled="true"/>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Сохраняем сумму налога по патенту" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">tax_payment</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.tax_payment</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Проверяем сумму налога к уплате -(tax_base/365)*31* 0.06" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">int tax_base = Float.parseFloat(vars[&apos;tax_base&apos;])
int tax_payment = Float.parseFloat(vars[&apos;tax_payment&apos;]) 
int sum_tax = Math.round((tax_base/365)*31* 0.06)

if ( sum_tax == tax_payment ){
	AssertionResult.setFailure(false)
}
else {
	AssertionResult.setFailure(true)
	AssertionResult.setFailureMessage(&quot;Налог для оплаты первой части  патента не соответствует рассчитанному: sum_tax&quot;)
} </stringProp>
              </JSR223Assertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сумму первой части налога к уплате - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_first</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем сумму второй части налога к уплате - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_second</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты налога - ${__time(yyyy,)}-07-31" enabled="true">
                <stringProp name="JSON_PATH">.result.due_date</stringProp>
                <stringProp name="EXPECTED_VALUE">${__time(yyyy,)}-07-31</stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">false</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="Проверяем дату окончания срока уплаты первой части налога - null, так как патент менее полгода" enabled="true">
                <stringProp name="JSON_PATH">.result.tax_payment_second</stringProp>
                <stringProp name="EXPECTED_VALUE"></stringProp>
                <boolProp name="JSONVALIDATION">true</boolProp>
                <boolProp name="EXPECT_NULL">true</boolProp>
                <boolProp name="INVERT">false</boolProp>
                <boolProp name="ISREGEX">false</boolProp>
              </JSONPathAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Удаляем патент из БД" enabled="true">
              <stringProp name="dataSource">SKREPKA_${__P(layer)}</stringProp>
              <stringProp name="query">delete from patent_patent  
where id=&apos;${patent_id}&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Проверяем что запись удалена" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1329970139">1 updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="Allure.log.info" enabled="true">
                <stringProp name="cacheKey">false</stringProp>
                <stringProp name="filename">${_allure_config_path}</stringProp>
                <stringProp name="parameters">stop</stringProp>
                <stringProp name="script"></stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
